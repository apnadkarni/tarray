[include version.inc]
[comment {-*- tcl -*- doctools manpage}]
[manpage_begin "tarray::column" n [vset tarray_version]]
[copyright "2012-2013 Ashok P. Nadkarni"]
[moddesc "Typed Array Columns"]
[titledesc "Commands related to typed array columns"]
[require Tcl 8.5]
[require tarray ?[vset tarray_version]?]

[description]

The [cmd tarray] extension implements typed arrays and associated commands
[cmd column] and [uri table.html [cmd table]].
This page provides reference documentation for
commands related to typed columns.
See [uri tarray.html] for an overview and [uri guide.html] for a
programming guide.
[subsection Columns]
A typed array column contains elements of a single 
[sectref "Types" type]
that is specified when it is created. The command [cmd tarray::column]
can be used
to create and manipulate typed columns including searching and sorting
operations.
[para]
Related to columns are [uri table.html tables] which are ordered
sequences of typed columns.

[include types.inc]
[include indices.inc]
[subsection "Standard Options"]
The format
of the returned values is controlled by the following options:
[list_begin options]
[opt_def -list] The values are returned as a Tcl list.
[opt_def -dict]
The values are returned as a dictionary keyed by the corresponding indices.
[opt_def -column] The values are returned as a typed column.
This is the default if none of the other options is specified.
[list_end]

[section "Command Reference"]

Note: All commands are located in the [cmd tarray] namespace.

[list_begin definitions]

[call [cmd "column create"] [arg TYPE] [arg [opt INITIALIZER]] [arg [opt INITSIZE]]]
Returns a typed array of the type [arg TYPE] which must be one of one
of valid types described in [sectref "Types"]. If 
[arg INITIALIZER] is specified, it is the initial content of the typed array 
and must be a
list with elements of the appropriate type. For performance reasons,
the [arg INITSIZE] argument may be specified to indicate how many slots to
preallocate for the array. This is only treated as a hint and actual
size allocated may differ.

[call [cmd "column delete"] [arg COLUMN] [arg INDEX]]
[call [cmd "column delete"] [arg COLUMN] [arg INDEXLIST]]
[call [cmd "column delete"] [arg COLUMN] [arg LOW] [arg HIGH]]
Returns a typed column with all specified elements deleted. 
Indices are specified in any of the forms described in [sectref Indices]
and may contain duplicates.
Out-of-range indices are ignored.

[call [cmd "column fill"] [arg COLUMN] [arg VALUE] [arg INDEX]]
[call [cmd "column fill"] [arg COLUMN] [arg VALUE] [arg INDEXLIST]]
[call [cmd "column fill"] [arg COLUMN] [arg VALUE] [arg LOW] [arg HIGH]]
Returns a typed column with specified indices set to [arg VALUE].
Indices are specified in any of the forms described in [sectref Indices]
and must follow the rules described there. The index keyword [const end]
refers to the current last occupied position in the column.
The size of the array will be extended if necessary provided the specified
indices do not have gaps beyond the current column size.

[call [cmd "column get"] [arg [opt "OPTIONS"]] [arg COLUMN] [arg INDEXLIST]]
Returns the values from a typed column at the indices specified as
[sectref Indices "index list"].
Any of the [sectref "Standard Options" "standard options"]
may be specified with this command.


[call [cmd "column index"] [arg COLUMN] [arg INDEX]]
Returns the value of the element at the position specified by [arg INDEX]
which is a single [sectref Indices index].

[call [cmd "column insert"] [arg COLUMN] [arg VALUE] [arg FIRST] [arg COUNT]]
[call [cmd "column insert"] [arg COLUMN] [arg VALUES] [arg FIRST]]
In the first form, inserts [arg COUNT] elements with value [arg VALUE]
at position [arg FIRST] and returns the new column. In the second form,
[arg VALUES] may be a list of values or a typed column of the same type.
The values are inserted at the specified position. If [arg FIRST]
is [const end], the values are appended to the column.
In all cases, the command may extend the array if necessary.

[call [cmd "column intersect3"] [opt [cmd -nocase]] [arg COLUMNA] [arg COLUMNB]]
Returns a list of three columns, the first containing elements
common to both [arg COLUMNA] and [arg COLUMNB], the second containing
elements only present in [arg COLUMNA] and the third containing
elements only present in [arg COLUMNB]. Both columns must be of the same
type. The elements in each returned column are in arbitrary order.
[para]
The columns may contain duplicate elements. These are treated as distinct
so for example if [arg COLUMNA] contain 5 elements with value [const A],
and [arg COLUMNB] contains only 3 such elements, then the first column
in the result will contain two [const A] elements and the second
column will contain three.
[para]
Option [arg -nocase] only has effect if the column type is [const any]. If
specified, elements are compared in case-insensitive mode.

[call [cmd "column minmax"] [arg [opt OPTIONS]] [arg COLUMN]]
Searches the specified column for the minimum and maximum values, returning 
them as a pair. If [cmd -indices] is specified, their indices
are returned instead of their values. In case either value occurs 
at multiple indices in the column, the lowest index is returned.
[nl]
The option [cmd -range] can be specified to limit the search to a subrange
of the column. It takes a pair of indices,
in the one of the forms described in [sectref Indices],
that inclusively specify
the subrange. The second element of the pair may be omitted in which case 
it defaults to the last element in the column.
[nl]
The option [cmd -nocase] may be specified to indicate case-insensitive 
comparisons. This is only effective for column type [const any]
and ignored for the others.

[call [cmd "column place"] [arg COLUMN] [arg VALUES] [arg INDICES]]
Returns a typed column with the specified values at the 
corresponding  indices.
[arg VALUES] may be a list of values or a column of the same type.
The number of values in [arg VALUES] must not
be less than the number of indices specified in [arg INDICES].
[arg INDICES] must be a 
index list in the one of the forms described in [sectref Indices]
and may extend the column if the conditions listed there are satisfied.

[call [cmd "column put"] [arg COLUMN] [arg VALUES] [opt [arg FIRST]]]
Returns a typed column with the elements starting at index [arg FIRST]
replaced by the corresponding elements of [arg VALUES].
[arg VALUES] may be a list of values or a typed column of the same type.
The command may extend the array if necessary. If [arg FIRST] is
not specified the elements are appended to the array. The command interprets
[const end] as the position after the last element in the array.

[call [cmd "column range"] [arg [opt "OPTIONS"]] [arg COLUMN] [arg LOW] [arg HIGH]]
Returns the values from a typed column for indices in a specified range.
Any of the [sectref "Standard Options" "standard options"]
may be specified with this command.

[call [cmd "column reverse"] [arg COLUMN]]
Returns the typed column with order of elements reversed.

[call [cmd "column search"] [opt "[option -range] [arg RANGE]"] [opt "[option -among] [arg INDICES]"] [opt [option -all]] [opt [option -inline]] [opt [option -not]] [opt [option -nocase]] [arg [opt OPER]] [arg COLUMN] [arg VALUE]]
Searches the specified typed column for a matching value. By default,
the search starts at index 0 and returns the index of the first match,
returning -1 if no matching value is found. 
[para]
Options [option -range] and [option -among] modify which elements of
the column are examined. The [option -range] option limits the search
to the range specified by [arg RANGE] which either consists of two integer
indices denoting the starting and ending elements of the range (inclusive),
or a single integer index denoting the start of the range with the end
defaulting to the last element of the column.
The [option -among] option specifies a list of indices to be examined.
[arg INDICES] is an [sectref Indices "index list or index column"].
Indices are allowed to be specified multiple times
in arbitrary order. Elements are examined and matches returned in that 
same order. Indices that fall outside the range 
(either explicitly specified through [option -range] or defaulting to the
entire column) are ignored.
Thus if both [option -range] and [option -among] options are specified,
only those positions that meet both criteria are examined.
[para]
The command normally returns the index of the first succeeding match.
Note this is not necessarily the lowest matching index 
since [option -among] may specify indices in any order. 
If [option -all]
is specified, the
search does not stop at the first match but instead returns a list
containing the indices of all matched elements. This may be an empty
list if no elements matched.
[para]
If the [option -inline] option is specified, the
command returns the matched value(s) instead of their indices.
[para]
[arg OPER] specifies the comparison operator and must be one of the following:
[list_begin options]
[opt_def -eq] Matches when equal to value (default)
[opt_def -gt] Matches when greater than [arg VALUE]. 
Not valid for [const boolean] type.
[opt_def -lt] Matches when less than [arg VALUE].
Not valid for [const boolean] type.
[opt_def -pat] Matches [arg VALUE] using [cmd "string match"] pattern rules.
Only valid for type [const any].
[opt_def -re] Matches [arg VALUE] as a regular expression.
Only valid for type [const any].
[list_end]

The sense of the match can be inverted by specifying the [option -not] option
so for example specifying [option "-not -gt"] will match all elements that are
less than or equal to [arg VALUE]. For case insensitive matching, the
[option -nocase] option may be specified. This is ignored for all array types
except type [const any].


[call [cmd "column size"] [arg COLUMN]]
Returns the number of elements in the typed column.

[call [cmd "column sort"] [opt [option -indices]] [opt [option -increasing]] [opt [option -decreasing]] [opt [option -nocase]] [opt "[option -indirect] [arg TARGETCOLUMN]"] [arg COLUMN]]
Returns a sorted typed column. [arg COLUMN] is the typed column to
be sorted. The comparison is done in a column type-specific manner.
Sorting is sorted in increasing order by default.
The [option -decreasing] option may be specified to change this.
[para]
If the [option -indices] option is specified, the command returns a typed 
array containing the indices of the sorted values instead of the values
themselves.
[para]
If [option -nocase] is specified, the comparisons are done in
case-insensitive manner. This option is only applicable when the
column type is [const any] and is ignored otherwise.
[para]
Option [option -indirect] may only be used when [arg COLUMN] is of
type [const int]. In this case, the elements of [arg COLUMN] are
treated as indices into [arg TARGETCOLUMN] and are compared using
the corresponding values from [arg TARGETCOLUMN]. This option is
useful when sorting a column or multiple columns in a table
using different criteria while keeping a stable order.

[call [cmd "column type"] [arg COLUMN]]
Returns the [sectref "Types" type] of the typed column.

[call [cmd "column vdelete"] [arg COLUMNVAR] [arg INDEX]]
[call [cmd "column vdelete"] [arg COLUMNVAR] [arg INDEXLIST]]
[call [cmd "column vdelete"] [arg COLUMNVAR] [arg LOW] [arg HIGH]]
Deletes elements from the typed array column in variable [arg COLUMNVAR].
The new value is assigned back to the variable. The resulting value
of the variable (which may differ because of traces) is returned as the
result of the command.
Indices are specified in any of the forms described in [sectref Indices]
and may contain duplicates.
Out-of-range indices are ignored.

[call [cmd "column vfill"] [arg COLUMNVAR] [arg VALUE] [arg INDEX]]
[call [cmd "column vfill"] [arg COLUMNVAR] [arg VALUE] [arg INDEXLIST]]
[call [cmd "column vfill"] [arg COLUMNVAR] [arg VALUE] [arg LOW] [arg HIGH]]
Set the elements of the typed column in variable [arg COLUMNVAR] to
[arg VALUE]. 
The new value is assigned back to the variable. The resulting value
of the variable (which may differ because of traces) is returned as the
result of the command.
[para]
See [cmd fill] for more information.

[call [cmd "column vinsert"] [arg COLUMNVAR] [arg VALUE] [arg FIRST] [arg COUNT]]
[call [cmd "column vinsert"] [arg COLUMNVAR] [arg VALUES] [arg FIRST]]
In the first form, inserts [arg COUNT] elements with value [arg VALUE]
at position [arg FIRST] in the type column stored in variable
[arg COLUMNVAR].
In the second form,
[arg VALUES] may be a list of values or a typed column of the same type.
The values are inserted at the specified position.
The new value is assigned back to the variable. The resulting value
of the variable (which may differ because of traces) is returned as the
result of the command.

[call [cmd "column vplace"] [arg COLUMNVAR] [arg VALUES] [arg INDICES]]
Modifies a typed column stored in the variable [arg COLUMNVAR]
with the specified values at the 
corresponding  indices.
The new value is assigned back to the variable. The resulting value
of the variable (which may differ because of traces) is returned as the
result of the command.

[para]
See the command [cmd "column place"] for other details.

[call [cmd "column vput"] [arg COLUMNVAR] [arg VALUES] [arg FIRST]]
Modifies a variable [arg COLUMNVAR] containing a typed column.
The elements of the column starting at index [arg FIRST] are
replaced by the corresponding elements of [arg VALUES]. If [arg FIRST] is
not specified the elements are appended to the array.
The new value is assigned back to the variable. The resulting value
of the variable (which may differ because of traces) is returned as the
result of the command.
[para]
See the command [cmd "column put"] for other details.

[call [cmd "column vreverse"] [arg COLUMNVAR]]
Reverses the order of elements in the 
typed column in variable [arg COLUMNVAR].
The new value is assigned back to the variable. The resulting value
of the variable (which may differ because of traces) is returned as the
result of the command.

[call [cmd "column vsort"] [opt [option -increasing]] [opt [option -decreasing]] [opt [option -nocase]] [opt "[option -indirect] [arg TARGETCOLUMN]"] [arg COLUMNVAR]]
Sorts a typed column stored in variable. 
[arg COLUMNVAR] is variable containing the typed column to
be sorted. The sorted column is also returned as the command result.
See the [cmd "column sort"] command for a description of the options.

[list_end]

[manpage_end]
