text {
    ((= chap_build "Installation and build"))
    Version {taversion}
    include::header.ad[]

    ((author "Ashok P. Nadkarni"))
}

text {
    == Download and installation
    
    Distributions of the `tarray`, `tarray_ui` and `xtal` packages
    are available from the SourceForge download
    area at http://sourceforge.net/projects/tarray/files. 

    === Installing on Windows

    Download `tarray-bin-VERSION.zip`, and optionally
    `tarray_ui-VERSION.zip` and
    `xtal-bin-VERSION.zip`, from
    http://sourceforge.net/projects/tarray/files[SourceForge].
    These contain both 32- and 64-bit binaries for Windows.
    Unpack the distributions into any directory present in the
    Tcl `auto_path` variable.

    === Installing on other platforms

    For other (Unix-like) platforms, the `tarray` and `xtal`
    packages are distributed as TEA-compatible
    extensions `tarray-VERSION.tar.gz` and `xtal-VERSION.tar.gz`.
    To install an extension, extract into a directory and from the
    top level directory run the following commands in the shell.
} syntax {
    ./configure --with-tcl=PATHTOTCLDIR
    make install
} text {
    where _PATHTOTCLDIR_ is the full path to the directory containing
    the `tclconfig.sh` file for the Tcl installation. Note there is no
    need for a standalone `make` command since the `make install` does the
    actual build as well as install.

    The built extensions will support parallelized operations if
    the `libdispatch` library is installed on the system. See
    ((^ build_parallel)) for details.

    The `tarray_ui` package, distributed as `tarray_ui-VERSION.tar.gz'
    is a pure Tcl package and can be extracted into any directory that
    is included in the Tcl `auto_path` variable.
    
    == Building from sources
    
    The `tarray` and `xtal` extensions are built using the 
    http://andreas-kupries.github.com/critcl/[Critcl] package.

    . Download a copy of the `tarray` sources by either cloning its Mercurial
    repository or downloading a snapshot of the sources. See
    https://sourceforge.net/p/tarray/code/ci/tip/tree/ for details.

    . Download and install the `critcl` package (3.1 or later) as described in
    http://andreas-kupries.github.com/critcl/doc/files/critcl_installer.html.

    . Set up your compiler environment, for example, running the `vcvars.bat`
    file on Windows.

    . Change to the `src` directory in the `tarray` source distribution and
    run a command of the form
} syntax {
    tclsh build.tcl extension ?-target _TARGETNAME_?
} text {
    . Change to the `xtal` directory and again run the same command as above
    to build that extension.

    If specified, _TARGETNAME_ should be one of the supported
    `critcl` build targets. Naturally, the build environment should
    reflect the chosen target. If unspecified, it defaults to whatever
    `critcl` guesses to be the host platform.

    This will create the `tarray` and `xtal` packages
    under the `build` directory in your source tree.

    You can of course create your own build scripts with different
    `Critcl` options using the `build.tcl` file as a template. 

    ((== build_parallel "Enabling parallelized operations"))
    
    Windows builds have support for parallelized operations using
    the native Win32 thread API's.
    To build parallelized versions for Unix/Linux platforms, 
    the `libdispatch` library has to be present on the system.
    If this library is not detected, the extension will not parallelize
    any operations. This library can be installed using the system's
    package manager on most Linux systems.
}
