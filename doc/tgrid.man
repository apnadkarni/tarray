[comment {-*- tcl -*- doctools manpage}]
[manpage_begin "tarray grid" n ""]
[copyright "2012-2013 Ashok P. Nadkarni"]
[moddesc "Typed Grids"]
[titledesc "Commands related to typed grids"]
[require Tcl 8.5]
[require tarray ?0.1?]
[description]

[section Introduction]

The [cmd tarray] extension implements typed arrays and associated commands
[cmd column] and [cmd grid]. See [uri tarray.html] for an overview.

This page documents typed grids.
A typed grid is an ordered sequence of [uri tarray.html "typed columns"]
of equal size. It can be viewed as an array of records where the
record fields happen to use column-wise storage. The corresponding
grid command operates on typed grids.

[include types.inc]
[include indices.inc]
[include options.inc]

[section Commands]

Note: All commands are located in the [cmd tarray] namespace.

[list_begin definitions]

[call [cmd "grid create"] [arg TYPES] [arg [opt INITIALIZER]] [arg [opt INITSIZE]]]
Returns a typed grid containing a sequence of columns whose types 
are specified by [arg TYPES] which must be a list of
of valid types described in [sectref "Types"]. If 
[arg INITIALIZER] is specified, it is the initial content of the typed array 
and must be either a compatible typed grid or a nested list with sublists
whose element types are compatible with the corresponding
column types in [arg TYPES].
[para]
For performance reasons,
the [arg INITSIZE] argument may be specified to indicate how many slots to
preallocate for the grid columns. This is only treated as a hint and actual
size allocated may differ.

[call [cmd "grid delete"] [arg GRID] [arg INDEX]]
[call [cmd "grid delete"] [arg GRID] [arg INDEXLIST]]
[call [cmd "grid delete"] [arg GRID] [arg LOW] [arg HIGH]]
Returns a typed grid with all specified rows deleted. The row
indices are specified in any of the forms described in [sectref Indices].

[call [cmd "grid fill"] [arg GRID] [arg ROWVALUE] [arg INDEX]]
[call [cmd "grid fill"] [arg GRID] [arg ROWVALUE] [arg INDEXLIST]]
[call [cmd "grid fill"] [arg GRID] [arg ROWVALUE] [arg LOW] [arg HIGH]]
Returns a typed grid with specified rows set to [arg ROWVALUE]. 
Each element from the list [arg ROWVALUE] is assigned to the corresponding
column of the grid at the specified indices. Any additional elements
in [arg ROWVALUE] are ignored. An error is generated if any element of
[arg ROWVALUE] does not match the type of the corresponding column or
if [arg ROWVALUE] contains fewer elements than the grid width.
Indices are specified in any of the forms described in [sectref Indices].
The size of the array will be extended if necessary.

[call [cmd "grid get"] [arg [opt "STANDARDOPTION"]] [arg GRID] [arg INDEXLIST]]
[call [cmd "grid get"] [arg [opt "STANDARDOPTION"]] [arg GRID] [arg LOW] [arg [opt HIGH]]]
Returns the values from a typed grid at the indices specified as
[sectref Indices "index list"] or [sectref Indices range].
The format
of the returned values is controlled by [arg STANDARDOPTION]
which may be any of the options controlling returned formats
as specified in [sectref "Standard Options"].

[call [cmd "grid index"] [arg GRID] [arg INDEX]]
Returns the value of the row at the position specified by [arg INDEX].

[call [cmd "grid insert"] [arg GRID] [arg ROWVALUE] [arg FIRST] [arg COUNT]]
[call [cmd "grid insert"] [arg GRID] [arg ROWVALUES] [arg FIRST]]
In the first form, inserts [arg COUNT] rows with value [arg ROWVALUE]
at position [arg FIRST] and returns the new grid. In the second form,
[arg ROWVALUES] may be a list of row values or a compatible grid.
The rows are inserted at the specified position.
In both cases, the command may extend the array if necessary.

[call [cmd "grid place"] [arg GRID] [arg ROWVALUES] [arg INDICES]]
Returns a grid with the specified values at the 
corresponding  indices.
[arg ROWVALUES] may be a list of row values or a compatible grid. 
The number of rows in [arg ROWVALUES] must not
be less than the number of indices specified in [arg INDICES] and the width
of each row must be no smaller than the width of the grid.
[arg INDICES] must be a 
index list in the one of the forms described in [sectref Indices]
and may extend the column if the condition listed there are satisfied.

[call [cmd "grid put"] [arg GRID] [arg ROWVALUES] [opt [arg FIRST]]]
Returns a grid with the elements starting at index [arg FIRST]
replaced by the corresponding elements of [arg ROWVALUES].
[arg ROWVALUES] may be a list of values or a grid of the same type.
The command may extend the array if necessary. If [arg FIRST] is
not specified the elements are appended.

[call [cmd "grid reverse"] [arg GRID]]
Returns the grid with order of elements reversed.

[call [cmd "column search"] [opt "[option -start] [arg STARTINDEX]"] [opt [option -all]] [opt [option -inline]] [opt [option -not]] [opt [option -nocase]] [arg [opt OPER]] [arg GRID] [arg ROWVALUE]]
Searches the specified typed column for a matching value. By default,
the search starts at index 0 and returns the index of the first match
found, returning -1 if no matching value is found. The other options
modify this behaviour. If the option [option -start] is specified, the search
starts at index [arg STARTINDEX] instead of 0. If [option -all]
is specified, the
search does not stop at the first match but instead returns a list
containing the indices of all matched elements. This may be an empty
list if no elements matched. If the [option -inline] option is specified, the
command returns the matched value(s) instead of their indices.
[para]
[arg OPER] specifies the comparison operator and must be one of the following:
[list_begin options]
[opt_def -eq] Matches when equal to value (default)
[opt_def -gt] Matches when greater than [arg ROWVALUE]. 
Not valid for [const boolean] type.
[opt_def -lt] Matches when less than [arg ROWVALUE].
Not valid for [const boolean] type.
[opt_def -pat] Matches [arg ROWVALUE] using [cmd "string match"] pattern rules.
Only valid for type [const any].
[opt_def -re] Matches [arg ROWVALUE] as a regular expression.
Only valid for type [const any].
[list_end]

The sense of the match can be inverted by specifying the [option -not] option
so for example specifying [option "-not -gt"] will match all elements that are
less than or equal to [arg ROWVALUE]. For case insensitive matching, the
[option -nocase] option may be specified. This is ignored for all array types
except type [const any].


[call [cmd "column size"] [arg GRID]]
Returns the number of elements in the typed column.

[call [cmd "column sort"] [opt [option -indices]] [opt [option -increasing]] [opt [option -decreasing]] [opt [option -nocase]] [arg GRID]]
Returns a sorted typed column. [arg GRID] is the typed column to
be sorted. The comparison is done in a column type-specific manner.
Sorting is sorted in increasing order by default.
The [option -decreasing] option may be specified to change this. If
the [option -indices] option is specified, the command returns a typed array
containing the indices of the sorted values instead of the values
themselves.
If [option -nocase] is specified, the comparisons are done in
case-insensitive manner. This option is only applicable when the
column type is [const tclobj] and is ignored otherwise.

[call [cmd "column type"] [arg GRID]]
Returns the [sectref "Types" type] of the typed column.

[call [cmd "column vdelete"] [arg GRIDVAR] [arg INDEX]]
[call [cmd "column vdelete"] [arg GRIDVAR] [arg INDEXLIST]]
[call [cmd "column vdelete"] [arg GRIDVAR] [arg LOW] [arg HIGH]]
Deletes elements from the typed array column in variable [arg GRIDVAR].
The new value is assigned back to the variable and also returned as the
result of the command.
Indices are specified in any of the forms described in [sectref Indices].

[call [cmd "column vfill"] [arg GRIDVAR] [arg ROWVALUE] [arg INDEX]]
[call [cmd "column vfill"] [arg GRIDVAR] [arg ROWVALUE] [arg INDEXLIST]]
[call [cmd "column vfill"] [arg GRIDVAR] [arg ROWVALUE] [arg LOW] [arg HIGH]]
Set the elements of the typed column in variable [arg GRIDVAR] to
[arg ROWVALUE]. 
The new value is assigned back to the variable and also returned as the
result of the command.
[para]
See [cmd fill] for more information.

[call [cmd "grid vinsert"] [arg GRIDVAR] [arg ROWVALUE] [arg FIRST] [arg COUNT]]
[call [cmd "grid vinsert"] [arg GRIDVAR] [arg ROWVALUES] [arg FIRST]]
In the first form, inserts [arg COUNT] rows with value [arg ROWVALUE]
at position [arg FIRST] in the grid stored in variable
[arg GRIDVAR].
In the second form,
[arg ROWVALUES] may be a list of row values or a compatible grid.
The rows are inserted at the specified position.
In both cases, the new value is stored back into the variable and returned
as the result of the command.

[call [cmd "column vplace"] [arg GRIDVAR] [arg ROWVALUES] [arg INDICES]]
Modifies a typed column stored in the variable [arg GRIDVAR]
with the specified values at the 
corresponding  indices. The new value is assigned back to the variable and 
also returned as the result of the command.
[para]
See the command [cmd "column place"] for other details.

[call [cmd "column vput"] [arg GRIDVAR] [arg ROWVALUES] [arg FIRST]]
Modifies a variable [arg GRIDVAR] containing a typed column.
The elements of the column starting at index [arg FIRST] are
replaced by the corresponding elements of [arg ROWVALUES]. If [arg FIRST] is
not specified the elements are appended to the array.
The new value is assigned back to the variable and also returned as the
result of the command. 
[para]
See the command [cmd "column put"] for other details.

[call [cmd "grid vreverse"] [arg GRIDVAR]]
Reverses the order of elements in the 
grid in variable [arg GRIDVAR], stores it back
in the variable. The result of the command is the resulting value
stored in the variable.

[call [cmd "column vsort"] [opt [option -indices]] [opt [option -increasing]] [opt [option -decreasing]] [opt [option -nocase]] [arg GRIDVAR]]
Sorts a typed column stored in variable. 
[arg GRIDVAR] is variable containing the typed column to
be sorted. The comparison is done in a column type-specific manner.
Sorting is sorted in increasing order by default.
The [option -decreasing] option may be specified to change this. If
the [option -indices] option is specified, the command returns a typed array
containing the indices of the sorted values instead of the values
themselves.
If [option -nocase] is specified, the comparisons are done in
case-insensitive manner. This option is only applicable when the
column type is [const tclobj] and is ignored otherwise.

[list_end]


[keywords column grid]

[manpage_end]
