package require Tcl 8.5
package require platform
package require tcltest
namespace eval tarray::test {
    set topdir [file dirname [file dirname [file normalize [info script]]]]
    set pkgdir [file join $topdir build lib tarray]
    if {[file exists [file join $pkgdir pkgIndex.tcl]]} {
        set auto_path [linsert $auto_path 0 $pkgdir]
    }

    proc validate {ta} {
        if {[llength $ta] != 3 ||
            [lindex $ta 0] ne "tarray" ||
            [lindex $ta 1] ni {any boolean double int uint wide}} {
            error "Value [string range $ta 0 40]... is not a tarray"
        }
    }
    tcltest::customMatch tarray tarray::test::tarray_compare
    proc tarray_compare {a b} {
        validate $a
        validate $b

        lassign $a _ atype avals
        lassign $b _ btype bvals
        if {$atype ne $btype} {
            error "Tarray types $atype and $btype do not match"
        }

        if {[llength $avals] != [llength $bvals]} {
            return 0
        }

        switch -exact -- $atype {
            boolean {
                foreach aval $avals bval $bvals {
                    if {!$aval != !$bval} { return 0 }
                }
            }
            any {
                foreach aval $avals bval $bvals {
                    if {$aval ne $bval} { return 0 }
                }
            }
            default {
                foreach aval $avals bval $bvals {
                    if {$aval != $bval} { return 0 }
                }
            }
        }

        return 1
    }


    variable counts {0 1 2 7 8 15 16 17 31 32 33 63 64 65 1001 32567 32568 100000}
    variable good
    foreach type {boolean byte double int uint wide} {
        set good($type) [list ]
    }
        
    set good(boolean) [list {} {0} {1}]
    foreach count $counts {
        foreach pat {0 1 01 10 1001 1100 11000011} {
            lappend good(boolean) [lrepeat $count {*}[split $pat ""]]
        }
    }

    proc rep {type values} {
        return [list tarray $type $values]
    }
}

package require tarray

namespace eval tarray::test {
    namespace import ::tcltest::test
    foreach type {any boolean byte double int uint wide} {
        test column-create-$type.0 {
            Test creation of empty column
        } -body {
            tarray::column create $type
        } -result [rep $type {}]
        test column-create-$type.1 {
            Test creation of empty column with preallocation
        } -body {
            tarray::column create $type {} 1000
        } -result [rep $type {}]
    }

    foreach {type values} [array get good] {
        set num -1
        foreach value $values {
            test column-create-$type.1.[incr num] {
                Test creation of column with initializer
            } -body {
                puts value:$value
                tarray::column create $type $value
            } -result [rep $type $value] -match tarray
        }
    }
}
