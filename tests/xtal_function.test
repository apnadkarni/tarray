# xtal function definitions

source [file join [file dirname [info script]] testutil.tcl]

namespace eval tarray::test {
    test function_tcl-1.0 {Define xtal function} -body {
        xtal::function fn {a b} {return a + b}
        fn 1 2
    } -result 3
    
    test function_tcl-1.1 {Define xtal function} -body {
        xtal::function fn {args} {llength(args)}
        fn 1 2 3 4
    } -result 4

    test function_tcl-1.2 {Define xtal function} -body {
        xtal::function fn {} {}
        fn 
    } -result ""

    test function_tcl-1.3 {Define xtal function} -body {
        xtal::function fn {a {b 10}} {
            return a + b
        }
        fn 1
    } -result 11

    test function_tcl-1.4 {Define xtal function} -body {
        xtal::function fn {a {b 10}} {return a + b}
        fn 1 5
    } -result 6

    test function_tcl-2.0 {Define xtal function error} -body {
        xtal::function fn {a b}
    } -result "wrong # args*" -match glob -returnCodes error


    # function definitions within xtal
    test function_xtal-1.0 {Define xtal function} -body {
        xtal::xtal {
            function fn (a, b) {return a + b}
            fn( 1, 2)
        }
    } -result 3
    
    test function_xtal-1.1 {Define xtal function} -body {
        xtal::xtal {function fn (args) {llength(args)}}
        fn 1 2 3 4
    } -result 4

    test function_xtal-1.2 {Define xtal function} -body {
        xtal::xtal {function fn () {}}
        fn 
    } -result ""

    test function_xtal-1.3 {Define xtal function} -body {
        xtal::xtal {
            function fn (a, b = 10) {
                return a + b
            }
        }
        fn 1
    } -result 11

    test function_xtal-1.4 {Define xtal function} -body {
        xtal::xtal {
            function fn (a, b = 10) {
                return a + b
            }
            fn(2)
        }
    } -result 12

    test function_xtal-1.5 {Define xtal function} -body {
        xtal::xtal {
            function fn (a, b = 10) {
                return a + b
            }
            fn(2,3)
        }
    } -result 5

    test function_xtal-2.0 {Define xtal function error} -body {
        xtal::xtal {function fn (a,b)}
    } -result "Parse error*" -match glob -returnCodes error

    test function_xtal-2.1 {Define xtal function error} -body {
        xtal::xtal {function fn (a b) {}}
    } -result "Parse error*" -match glob -returnCodes error

    #
    # Calling functions/commands
    test call-1.0 {Call a function} -body {
        xtal::xtal {set("xx", 123)}
        set xx
    } -result 123
        
    test call-2.0 {Call a ensemble} -body {
        xtal::xtal {string.index("abc", 1)}
    } -result b

    test call-2.1 {Call a ensemble} -body {
        xtal::xtal {string ("index", "abc", 2)}
    } -result c

    test call-3.0 {Call a function indirect} -setup {
        set fn "set"
    } -body {
        xtal::xtal {$fn("xx", 321)}
    } -result 321
    
    test call-3.1 {Call a ensemble indirect} -setup {
        set fn string
        set fn2 index
    } -body {
        xtal::xtal {$fn.$fn2("abc", 1)}
    } -result b

    test call-3.2 {Call a ensemble indirect} -setup {
        set fn string
        set fn2 index
    } -body {
        xtal::xtal {$fn(fn2, "abc", 1)}
    } -result b

    test call-3.3 {Call a ensemble indirect} -setup {
        set fn "string index"
    } -body {
        xtal::xtal {$fn("abc", 1)}
    } -result "invalid command name \"string index\"" -returnCodes error

    test call-4.0 {Call namespace} -setup {
        namespace eval ns {
            xtal::xtal {function fn () {return namespace.current()}}
        }
    } -body {
        xtal::xtal {ns::fn()}
    } -result ::tarray::test::ns

    test call-5.0 {Call with option} -body {
        xtal::xtal {subst(-novariables 'The value of val is $val')}
    } -result "The value of val is \$val"
        
    test call-5.1 {Call with option} -body {
        set opt -novariables
        xtal::xtal {subst("-novariables" 'The value of val is $val')}
    } -result "Parse error*" -match glob -returnCodes error
        
}


::tcltest::cleanupTests
