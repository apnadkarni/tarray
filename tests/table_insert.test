# table insert tests

source testutil.tcl

namespace eval tarray::test {

    test table_insert-value-1.0 {
        Insert one element at start of empty table (shared)
    } -body {
        set types {boolean any double}
        tab_change_and_verify $types {} [samplerows $types 0 0] insert [samplerow $types] 0 1
    } -result 0

    test table_insert-value-1.1 {
        Insert one element at end of empty table (unshared)
    } -body {
        set types {any wide boolean }
        tab_change_and_verify_u $types {} [samplerows $types 0 0] insert [samplerow $types] end 1
    } -result 0

    test table_insert-value-2.0 {
        Insert one element at start of table (shared)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types end end 0 100] insert [samplerow $types end] 0 1
    } -result 0

    test table_insert-value-2.1 {
        Insert multiple element at start of table (unshared)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types [samplerows $types 0 100] [concat [listrepeat 10 [samplerow $types end]] [samplerows $types 0 100]] insert [samplerow $types end] 0 10
    } -result 0

    test table_insert-value-2.2 {
        Insert multiple element at end of table (unshared)
    } -body {
        set types {any boolean byte}
        tab_change_and_verify_u $types [samplerows $types] [concat  [samplerows $types] [listrepeat 10 [samplerow $types 0]]] insert [samplerow $types 0] end 10
    } -result 0

    test table_insert-value-2.3 {
        Insert multiple element at end of table (shared)
    } -body {
        set types {boolean}
        tab_change_and_verify $types [samplerows $types] [concat  [samplerows $types] [listrepeat 10 [samplerow $types 0]]] insert [samplerow $types 0] end 10
    } -result 0

    test table_insert-value-2.4 {
        Insert multiple element in middle (unshared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [concat  [samplerows $types 0 49 ] [listrepeat 10 [samplerow $types end]] [samplerows $types 50 100]] insert [samplerow $types end] 50 10
    } -result 0

    test table_insert-value-2.5 {
        Insert multiple element in middle (shared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify $types [samplerows $types 0 100] [concat  [samplerows $types 0 49 ] [listrepeat 10 [samplerow $types end]] [samplerows $types 50 100]] insert [samplerow $types end] 50 10
    } -result 0

    test table_insert-value-2.6 {
        Insert elements after last element (shared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify $types [samplerows $types 0 100] [concat  [samplerows $types 0 100] [listrepeat 10 [samplerow $types 0]]] insert [samplerow $types 0] 101 10
    } -result 0

    test table_insert-value-3.0 {
        Insert zero elements (unshared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify_u $types [samplerows $types] [samplerows $types] insert [samplerow $types 0] 10 0
    } -result 0

    test table_insert-value-3.1 {
        Insert zero elements (shared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify $types [samplerows $types] [samplerows $types] insert [samplerow $types 0] 10 -1
    } -result "Invalid count -1*" -returnCodes error -match glob

    test table_insert-value-3.2 {
        Insert elements at negative index (unshared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify_u $types [samplerows $types] [samplerows $types] insert [samplerow $types 0] -1 1
    } -result "*index -1 out of bounds*" -returnCodes error -match glob

    test table_insert-value-3.3 {
        Insert elements at out of bounds index (unshared)
    } -body {
        set types {any boolean uint}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 10] insert [samplerow $types end] 12 1
    } -result "*index 12*out of bounds*" -match glob -returnCodes error


    test table_insert-list-1.0 {
        Insert single element list at start of empty table (shared)
    } -body { 
        set types {any boolean uint}
        tab_change_and_verify $types {} [samplerows $types 0 0] insert [samplerows $types 0 0] 0
    } -result 0

    test table_insert-list-1.1 {
        Insert single element list at end of empty table (unshared)
    } -body { 
        set types {boolean any int wide}
        tab_change_and_verify_u $types {} [samplerows $types 0 0] insert [samplerows $types 0 0] end
    } -result 0

    test table_insert-list-1.2 {
        Insert list at start of empty column (shared)
    } -body {
        set types {boolean any int wide}
        tab_change_and_verify $types {} [samplerows $types 0 1] insert [samplerows $types 0 1] 0
    } -result 0

    test table_insert-list-2.0 {
        Insert multiple element at start of table (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 11 15 0 10] insert [samplerows $types 11 15] 0
    } -result 0

    test table_insert-list-2.1 {
        Insert multiple element at start of table (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 10] [samplerows $types 11 15 0 10] insert [samplerows $types 11 15] 0
    } -result 0

    test table_insert-list-2.2 {
        Insert multiple element at end of table (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 100 11 15] insert [samplerows $types 11 15] end
    } -result 0

    test table_insert-list-2.3 {
        Insert multiple element at penultimate position (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 99 11 15 100 100] insert [samplerows $types 11 15] 100
    } -result 0

    test table_insert-list-2.4 {
        Insert multiple elements in middle (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 50 11 15 51 100] insert [samplerows $types 11 15] 51
    } -result 0

    test table_insert-list-2.5 {
        Insert elements in middle of column (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 9 0 9 10 100] insert [samplerows $types 0 9] 10
    } -result 0

    test table_insert-list-2.6 {
        Insert multiple elements in middle extending column (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 94 10 19 95 100] insert [samplerows $types 10 19] 95
    } -result 0

    test table_insert-list-2.7 {
        Insert multiple elements in middle extending column (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 94 0 100 95 100] insert [samplerows $types 0 100] 95
    } -result 0

    test table_insert-list-2.8 {
        Insert elements after last element (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 100 0 100] insert [samplerows $types 0 100] 101
    } -result 0

    test table_insert-list-3.0 {
        Insert zero elements (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types] [samplerows $types] insert {} 100
    } -result 0

    test table_insert-list-3.1 {
        Insert elements at negative index (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types] [samplerows $types] insert [samplerows $types 0 1] -1
    } -result "*index -1*out of bounds*" -match glob -returnCodes error

    test table_insert-list-3.2 {
        Insert elements at out of bounds index (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 100] insert [samplerows $types 0 1] 102
    } -result "*index 102*out of bounds*" -match glob -returnCodes error


    test table_insert-table-1.0 {
        Insert single element table at start of empty table (shared)
    } -body { 
        set types {any boolean uint}
        tab_change_and_verify $types {} [samplerows $types 0 0] insert [sampletable $types 0 0] 0
    } -result 0

    test table_insert-table-1.1 {
        Insert single element table at end of empty table (unshared)
    } -body { 
        set types {boolean any int wide}
        tab_change_and_verify_u $types {} [samplerows $types 0 0] insert [sampletable $types 0 0] end
    } -result 0

    test table_insert-table-1.2 {
        Insert table at start of empty column (shared)
    } -body {
        set types {boolean any int wide}
        tab_change_and_verify $types {} [samplerows $types 0 1] insert [sampletable $types 0 1] 0
    } -result 0

    test table_insert-table-2.0 {
        Insert multiple element at start of table (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 11 15 0 10] insert [sampletable $types 11 15] 0
    } -result 0

    test table_insert-table-2.1 {
        Insert multiple element at start of table (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 10] [samplerows $types 11 15 0 10] insert [sampletable $types 11 15] 0
    } -result 0

    test table_insert-table-2.2 {
        Insert multiple element at end of table (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 100 11 15] insert [sampletable $types 11 15] end
    } -result 0

    test table_insert-table-2.3 {
        Insert multiple element at penultimate position (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 99 11 15 100 100] insert [sampletable $types 11 15] 100
    } -result 0

    test table_insert-table-2.4 {
        Insert multiple elements in middle (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 50 11 15 51 100] insert [sampletable $types 11 15] 51
    } -result 0

    test table_insert-table-2.5 {
        Insert elements in middle of column (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 9 0 9 10 100] insert [sampletable $types 0 9] 10
    } -result 0

    test table_insert-table-2.6 {
        Insert multiple elements in middle extending column (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 94 10 19 95 100] insert [sampletable $types 10 19] 95
    } -result 0

    test table_insert-table-2.7 {
        Insert multiple elements in middle extending column (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 94 0 100 95 100] insert [sampletable $types 0 100] 95
    } -result 0

    test table_insert-table-2.8 {
        Insert elements after last element (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types 0 100] [samplerows $types 0 100 0 100] insert [sampletable $types 0 100] 101
    } -result 0

    test table_insert-table-3.0 {
        Insert zero elements (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types] [samplerows $types] insert [newtable $types {}] 100
    } -result 0

    test table_insert-table-3.1 {
        Insert elements at negative index (shared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify $types [samplerows $types] [samplerows $types] insert [sampletable $types 0 1] -1
    } -result "*index -1*out of bounds*" -match glob -returnCodes error

    test table_insert-table-3.2 {
        Insert elements at out of bounds index (unshared)
    } -body {
        set types {boolean any int wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 100] insert [sampletable $types 0 1] 102
    } -result "*index 102*out of bounds*" -match glob -returnCodes error

    #
    # Verify string rep regeneration

    test table_insert-stringrep-1.0 {
        Verify string representation is updated on unshared object - bug 18
    } -body {
        tarray::table insert {tarray_table {f0 f1 f2} {{tarray_column int {99}} {tarray_column int {99}} {tarray_column int {99}}}} {{0 1 2}} 0
    } -result {tarray_table {f0 f1 f2} {{tarray_column int {0 99}} {tarray_column int {1 99}} {tarray_column int {2 99}}}}


}

::tcltest::cleanupTests
