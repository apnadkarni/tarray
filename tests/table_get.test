# TBD - sorted indices tarray
# column get tests

source testutil.tcl

namespace eval tarray::test {

    proc test_table_get_indexlist_astable {indexlist {types {any boolean byte double int uint wide}}} {
        set got [tarray::table get -tarray [sampletable $types] $indexlist]
        if {[trequal $got $types [samplerows $types $indexlist]]} {
            return ""
        } else {
            return "Returned table != expected"
        }
    }

    proc test_table_get_indices_astable {indexlist {types {any boolean byte double int uint wide}}} {
        set got [tarray::table get -tarray [sampletable $types] [indexcolumn $indexlist]]
        if {[trequal $got $types [samplerows $types $indexlist]]} {
            return ""
        } else {
            return "Returned table != expected"
        }
    }

    proc test_table_get_indexlist_aslist {indexlist {types {any boolean byte double int uint wide}}} {
        set got [tarray::table get -list [sampletable $types] $indexlist]
        if {[llequal $types [samplerows $types $indexlist] $got]} {
            return ""
        } else {
            return "Returned list != expected"
        }
    }

    proc test_table_get_indices_aslist {indexlist {types {any boolean byte double int uint wide}}} {
        set got [tarray::table get -list [sampletable $types] [indexcolumn $indexlist]]
        if {[llequal $types [samplerows $types $indexlist] $got]} {
            return ""
        } else {
            return "Returned list != expected"
        }
    }


    # Tests values passed as list returned as a list
    proc test_table_get_indexlist_asdict {indexlist {types {any boolean byte double int uint wide}}} {
        set result [tarray::table get -dict [sampletable $types] $indexlist]
        set expected_rows [samplerows $types $indexlist]
        # Dictionary key is index, row is value
        set rows {}
        foreach index $indexlist {
            lappend rows [dict get $result $index]
        }
        
        if {[llequal $types $rows $expected_rows]} {
            return ""
        } else {
            return "Returned dict != expected"
        }
    }

    # Tests values passed as list returned as a list
    proc test_table_get_indices_asdict {indexlist {types {any boolean byte double int uint wide}}} {
        set result [tarray::table get -dict [sampletable $types] [indexcolumn $indexlist]]
        set expected_rows [samplerows $types $indexlist]
        # Dictionary key is index, row is value
        set rows {}
        foreach index $indexlist {
            lappend rows [dict get $result $index]
        }
        
        if {[llequal $types $rows $expected_rows]} {
            return ""
        } else {
            return "Returned dict != expected"
        }
    }

    proc test_table_get_range_astable {low high {types {any boolean byte double int uint wide}}} {

        set expected_rows [samplerows $types $low $high]
        set ta [tarray::table get -tarray [sampletable $types] $low $high]

        if {[trequal $ta $types $expected_rows]} {
            return ""
        } else {
            return "Returned table != expected"
        }
    }

    proc test_table_get_range_aslist {low high {types {any boolean byte double int uint wide}}} {

        set expected_rows [samplerows $types $low $high]
        set rows [tarray::table get -list [sampletable $types] $low $high]

        if {[llequal $types $rows $expected_rows]} {
            return ""
        } else {
            return "Returned list != expected"
        }
    }

    proc test_table_get_range_asdict {low high {types {any boolean byte double int uint wide}}} {

        set expected_rows [samplerows $types $low $high]
        set result [tarray::table get -dict [sampletable $types] $low $high]
        
        set max [expr {[samplesize] - 1}]
        foreach var {low high} {
            if {[set $var] eq "end"} { set $var $max }
            if {[set $var] < 0} {set $var 0}
            if {[set $var] > $max} {set $var $max}
        }

        set rows {}
        for {set i $low} {$i <= $high} {incr i} {
            lappend rows [dict get $result $i]
        }

        if {[llequal $types $rows $expected_rows]} {
            return ""
        } else {
            return "Returned dict != expected"
        }
    }

    ################################################################
    # Tests

    #
    # table get indexlist

    test table_get-indexlist-astable-1.0 {
        Get an empty index list from empty array
    } -body {
        tarray::table get [newtable {}] {}
    } -result [crep any {}]

    test table_get-indexlist-astable-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {}] {0}
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indexlist-astable-1.2 {
        Get an empty index list from empty array
    } -body {
        tarray::table get [newtable {int boolean any}] {}
    } -result [crep any [list [crep int] [crep boolean] [crep any]]]

    test table_get-indexlist-astable-1.3 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {uint boolean any wide}] {0}
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indexlist-astable-2.0 {
        Get the first element
    } -body { test_table_get_indexlist_astable {0} }

    test table_get-indexlist-astable-2.1 {
        Get empty indexlist
    } -body { test_table_get_indexlist_astable {} }
    
    test table_get-indexlist-astable-2.2 {
        Get first and last 
    } -body {
        test_table_get_indexlist_astable [list 0 [expr {[samplesize]-1}]]
    }

    test table_get-indexlist-astable-2.3 {
        Get ordered indexlist
    } -body { test_table_get_indexlist_astable {3 4 50 150} }

    test table_get-indexlist-astable-2.4 {
        Get reverse ordered indexlist
    } -body { test_table_get_indexlist_astable {100 65 30} }

    test table_get-indexlist-astable-2.5 {
        Get random ordered indexlist
    } -body { test_table_get_indexlist_astable {10 0 77 65 82} }

    test table_get-indexlist-astable-2.6 {
        Get indexlist with duplicates
    } -body { test_table_get_indexlist_astable {10 0 77 65 82 77 10} }

    test table_get-indexlist-astable-3.0 {
        Get the end element
    } -body {
        test_table_get_indexlist_astable {0 end}
    } -returnCodes error -result "*expected integer*" -match glob

    test table_get-indexlist-astable-3.1 {
        Get negative index
    } -body {
        test_table_get_indexlist_astable {0 -1}
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indexlist-astable-3.2 {
        Get out of bounds index
    } -body {
        test_table_get_indexlist_astable [list [samplesize]]
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indexlist-astable-4.0 {
        Get indexlist verify -tarray is default 
    } -body {
        tarray::table get -tarray [newtable {int any} {{0 a} {1 b}}] {1 0}
    } -result [crep any [list [crep int {1 0}] [crep any {b a}]]]


    # get -list indexlist

    test table_get-indexlist-aslist-1.0 {
        Get an empty index list from empty array
    } -body { tarray::table get -list [newtable {}] {} }

    test table_get-indexlist-aslist-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {} {}] {0}
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indexlist-aslist-1.2 {
        Get an empty index list from empty array
    } -body { tarray::table get -list [newtable {any boolean}] {} }

    test table_get-indexlist-aslist-1.3 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {int wide} {}] {0}
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indexlist-aslist-2.0 {
        Get the first element
    } -body { test_table_get_indexlist_aslist {0} }

    test table_get-indexlist-aslist-2.1 {
        Get empty indexlist
    } -body { test_table_get_indexlist_aslist {} }

    test table_get-indexlist-aslist-2.2 {
        Get first and last 
    } -body {
        test_table_get_indexlist_aslist [list 0 [expr {[samplesize]-1}]]
    }

    test table_get-indexlist-aslist-2.3 {
        Get ordered indexlist
    } -body { test_table_get_indexlist_aslist {3 4 50 150} }

    test table_get-indexlist-aslist-2.4 {
        Get reverse ordered indexlist
    } -body { test_table_get_indexlist_aslist {100 65 30} }

    test table_get-indexlist-aslist-2.5 {
        Get random ordered indexlist
    } -body { test_table_get_indexlist_aslist {10 0 77 65 82} }

    test table_get-indexlist-aslist-2.6 {
        Get indexlist with duplicates
    } -body { test_table_get_indexlist_aslist {10 0 77 65 82 77 10} }

    test table_get-indexlist-aslist-3.0 {
        Get the end element
    } -body {
        test_table_get_indexlist_aslist {0 end}
    } -returnCodes error -result "*expected integer*" -match glob

    test table_get-indexlist-aslist-3.1 {
        Get negative index
    } -body {
        test_table_get_indexlist_aslist {0 -1}
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indexlist-aslist-3.2 {
        Get out of bounds index
    } -body {
        test_table_get_indexlist_aslist [list [samplesize]]
    } -returnCodes error -result "*out of bounds*" -match glob

    #
    # get -dict indexlist

    test table_get-indexlist-asdict-1.0 {
        Get an empty index list from empty array
    } -body { tarray::table get -dict [newtable {}] {} }

    test table_get-indexlist-asdict-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get -dict [newtable {}] {0}
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indexlist-asdict-2.0 {
        Get the first element
    } -body { test_table_get_indexlist_asdict 0 }

    test table_get-indexlist-asdict-2.1 {
        Get empty indexlist
    } -body { test_table_get_indexlist_asdict {} }

    test table_get-indexlist-asdict-2.2 {
        Get first and last 
    } -body { test_table_get_indexlist_asdict [list 0 [expr {[samplesize]-1}]] }

    test table_get-indexlist-asdict-2.3 {
        Get ordered indexlist
    } -body { test_table_get_indexlist_asdict {3 4 50 150} }

    test table_get-indexlist-asdict-2.4 {
        Get reverse ordered indexlist
    } -body { test_table_get_indexlist_asdict {100 65 30} }

    test table_get-indexlist-asdict-2.5 {
        Get random ordered indexlist
    } -body { test_table_get_indexlist_asdict {10 0 77 65 82} }

    test table_get-indexlist-asdict-2.6 {
        Get indexlist with duplicates
    } -body { test_table_get_indexlist_asdict {10 0 77 65 82 77 10} }

    test table_get-indexlist-asdict-3.0 {
        Get the end element
    } -body {
        test_table_get_indexlist_asdict {0 end}
    } -returnCodes error -result "*expected integer*" -match glob

    test table_get-indexlist-asdict-3.1 {
        Get negative index
    } -body {
        test_table_get_indexlist_asdict {0 -1}
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indexlist-asdict-3.2 {
        Get out of bounds index
    } -body {
        test_table_get_indexlist_asdict [list [samplesize]]
    } -returnCodes error -result "*out of bounds*" -match glob

    # table get indicesarray

    test table_get-indices-astable-1.0 {
        Get an empty index list from empty array
    } -body {
        tarray::table get [newtable {int boolean any}] [indexcolumn {}]
    } -result [crep any [list [crep int] [crep boolean] [crep any]]]

    test table_get-indices-astable-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {boolean uint any wide}] [indexcolumn 0]
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indices-astable-2.0 {
        Get the first element
    } -body { test_table_get_indices_astable {0} }

    test table_get-indices-astable-2.1 {
        Get empty indices
    } -body { test_table_get_indices_astable {} }

    test table_get-indices-astable-2.2 {
        Get first and last 
    } -body {
        test_table_get_indices_astable [list 0 [expr {[samplesize]-1}]]
    }

    test table_get-indices-astable-2.3 {
        Get ordered indices
    } -body { test_table_get_indices_astable {3 4 50 150} }

    test table_get-indices-astable-2.4 {
        Get reverse ordered indices
    } -body { test_table_get_indices_astable {100 65 30} }

    test table_get-indices-astable-2.5 {
        Get random ordered indices
    } -body { test_table_get_indices_astable {10 0 77 65 82} }

    test table_get-indices-astable-2.6 {
        Get indices with duplicates
    } -body { test_table_get_indices_astable  {10 0 77 65 82 77 10} }

    test table_get-indices-astable-3.0 {
        Get negative index
    } -body {
        test_table_get_indices_astable {0 -1}
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indices-astable-3.1 {
        Get out of bounds index
    } -body {
        test_table_get_indices_astable [list [samplesize]]
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indices-astable-4.0 {
        Get indices verify -tarray is default 
    } -body {
        tarray::table get -tarray [newtable {int any} {{0 a} {1 b}}]  {1 0}
    } -result [crep any [list [crep int {1 0}] [crep any {b a}]]]


    # get -list indices

    test table_get-indices-aslist-1.0 {
        Get an empty index list from empty array
    } -body { tarray::table get -list [newtable {any boolean}] [indexcolumn {}] }

    test table_get-indices-aslist-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {int wide} {}] [indexcolumn 0]
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indices-aslist-2.0 {
        Get the first element
    } -body { test_table_get_indices_aslist {0} }

    test table_get-indices-aslist-2.1 {
        Get empty indices
    } -body { test_table_get_indices_aslist {} }

    test table_get-indices-aslist-2.2 {
        Get first and last 
    } -body {
        test_table_get_indices_aslist [list 0 [expr {[samplesize]-1}]]
    }

    test table_get-indices-aslist-2.3 {
        Get ordered indices
    } -body { test_table_get_indices_aslist {3 4 50 150} }

    test table_get-indices-aslist-2.4 {
        Get reverse ordered indices
    } -body { test_table_get_indices_aslist  {100 65 30} }

    test table_get-indices-aslist-2.5 {
        Get random ordered indices
    } -body { test_table_get_indices_aslist {10 0 77 65 82} }

    test table_get-indices-aslist-2.6 {
        Get indices with duplicates
    } -body { test_table_get_indices_aslist {10 0 77 65 82 77 10} }

    test table_get-indices-aslist-3.0 {
        Get negative index
    } -body {
        test_table_get_indices_aslist {0 -1}
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indices-aslist-3.1 {
        Get out of bounds index
    } -body {
        test_table_get_indices_aslist [list [samplesize]]
    } -returnCodes error -result "*out of bounds*" -match glob

    #
    # get -dict indices

    test table_get-indices-asdict-1.0 {
        Get an empty index list from empty array
    } -body { tarray::table get -dict [newtable {}] [indexcolumn {}] }

    test table_get-indices-asdict-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get -dict [newtable {}] [indexcolumn 0]
    } -returnCodes error -result "*index 0 out of bounds" -match glob

    test table_get-indices-asdict-2.0 {
        Get the first element
    } -body { test_table_get_indices_asdict {0} }

    test table_get-indices-asdict-2.1 {
        Get empty indices
    } -body { test_table_get_indices_asdict {} }

    test table_get-indices-asdict-2.2 {
        Get first and last 
    } -body { test_table_get_indices_asdict [list 0 [expr {[samplesize]-1}]] }

    test table_get-indices-asdict-2.3 {
        Get ordered indices
    } -body { test_table_get_indices_asdict  {3 4 50 150} }

    test table_get-indices-asdict-2.4 {
        Get reverse ordered indices
    } -body { test_table_get_indices_asdict {100 65 30} }

    test table_get-indices-asdict-2.5 {
        Get random ordered indices
    } -body { test_table_get_indices_asdict {10 0 77 65 82} }

    test table_get-indices-asdict-2.6 {
        Get indices with duplicates
    } -body { test_table_get_indices_asdict {10 0 77 65 82 77 10} }

    test table_get-indices-asdict-3.0 {
        Get negative index
    } -body {
        test_table_get_indices_asdict {0 -1}
    } -returnCodes error -result "*out of bounds*" -match glob

    test table_get-indices-asdict-3.1 {
        Get out of bounds index
    } -body {
        test_table_get_indices_asdict [list [samplesize]]
    } -returnCodes error -result "*out of bounds*" -match glob


    #
    # table get range

    test table_get-range-astable-1.0 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {}] 0 end
    } -result [crep any {}] -match column

    test table_get-range-astable-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {}] 0 0
    } -result [crep any {}] -match column

    test table_get-range-astable-1.2 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {int any}] 0 end
    } -result [crep any [list [crep int] [crep any]]]

    test table_get-range-astable-1.3 {
        Get the first element in empty array
    } -body {
        tarray::table get [newtable {boolean any}] 0 0
    } -result [crep any [list [crep boolean] [crep any]]]

    test table_get-range-astable-2.0 {
        Get the first element
    } -body { test_table_get_range_astable 0 0}

    test table_get-range-astable-2.1 {
        Get first to end
    } -body { test_table_get_range_astable 0 end }

    test table_get-range-astable-2.2 {
        Get first to last 
    } -body {
        test_table_get_range_astable 0 [expr {[samplesize]-1}]
    }

    test table_get-range-astable-2.3 {
        Get range with negative low
    } -body { test_table_get_range_astable -5 100 }

    test table_get-range-astable-2.4 {
        Get range with out of bounds high
    } -body { test_table_get_range_astable 50 10000}

    test table_get-range-astable-2.5 {
        Get range out of bounds on both ends
    } -body { test_table_get_range_astable -10 10000 }

    test table_get-range-astable-2.6 {
        Get end-end
    } -body { test_table_get_range_astable end end }

    test table_get-range-astable-2.6 {
        Get end-0
    } -body { test_table_get_range_astable end 0 }

    test table_get-range-astable-4.0 {
        Get indexlist -tarray option
    } -body {
        tarray::table get -tarray [newtable {int any} {{0 a} {1 b}}] 0 1
    } -result [crep any [list [crep int {0 1}] [crep any {a b}]]]


    #
    # table get -aslist range

    test table_get-range-aslist-1.0 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {}] 0 end
    } -result {}

    test table_get-range-aslist-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {}] 0 0
    } -result {}

    test table_get-range-aslist-1.2 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {boolean}] 0 end
    } -result {}

    test table_get-range-aslist-1.3 {
        Get the first element in empty array
    } -body {
        tarray::table get -list [newtable {any}] 0 0
    } -result {}

    test table_get-range-aslist-2.0 {
        Get the first element
    } -body { test_table_get_range_aslist 0 0}

    test table_get-range-aslist-2.1 {
        Get first to end
    } -body { test_table_get_range_aslist  0 end }

    test table_get-range-aslist-2.2 {
        Get first to last 
    } -body { test_table_get_range_aslist  0 [expr {[samplesize] -1}] }

    test table_get-range-aslist-2.3 {
        Get range with negative low
    } -body { test_table_get_range_aslist -5 100 }

    test table_get-range-aslist-2.4 {
        Get range with out of bounds high
    } -body { test_table_get_range_aslist 50 10000}

    test table_get-range-aslist-2.5 {
        Get range out of bounds on both ends
    } -body { test_table_get_range_aslist -10 10000 }

    test table_get-range-aslist-2.6 {
        Get end-end
    } -body { test_table_get_range_aslist end end }

    test table_get-range-aslist-2.6 {
        Get end-0
    } -body { test_table_get_range_aslist end 0 }

    #
    # table get -dict range

    test table_get-range-asdict-1.0 {
        Get the first element in empty array
    } -body {
        tarray::table get -dict [newtable {}] 0 end
    } -result {}

    test table_get-range-asdict-1.1 {
        Get the first element in empty array
    } -body {
        tarray::table get -dict [newtable {}] 0 0
    } -result {}

    test table_get-range-asdict-1.2 {
        Get the first element in empty array
    } -body {
        tarray::table get -dict [newtable {boolean int}] 0 end
    } -result {}

    test table_get-range-asdict-1.3 {
        Get the first element in empty array
    } -body {
        tarray::table get -dict [newtable {any uint}] 0 0
    } -result {}

    test table_get-range-asdict-2.0 {
        Get the first element
    } -body { test_table_get_range_asdict 0 0}

    test table_get-range-asdict-2.1 {
        Get first to end
    } -body { test_table_get_range_asdict 0 end }

    test table_get-range-asdict-2.2 {
        Get first to last 
    } -body {
        test_table_get_range_asdict 0 [expr {[samplesize] -1}]
    }

    test table_get-range-asdict-2.3 {
        Get range with negative low
    } -body { test_table_get_range_asdict -5 100 }

    test table_get-range-asdict-2.4 {
        Get range with out of bounds high
    } -body { test_table_get_range_asdict 50 10000}

    test table_get-range-asdict-2.5 {
        Get range out of bounds on both ends
    } -body { test_table_get_range_asdict -10 10000 }

    test table_get-range-asdict-2.6 {
        Get end-end
    } -body { test_table_get_range_asdict end end }

    test table_get-range-asdict-2.6 {
        Get end-0
    } -body { test_table_get_range_asdict end 0 }
}

::tcltest::cleanupTests
