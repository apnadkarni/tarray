# tarray column create

source testutil.tcl

namespace eval tarray::test {
    namespace import ::tcltest::test

    #
    # Tests for creating single column tables
    foreach type {any string boolean byte double int uint wide} {
        test table_create-$type-1.0 {
            Test creation of empty table
        } -body {
            set tab [tarray::table create [list fld_$type $type] {}]
            list tarray_table [lequal any [lindex $tab 1] [list fld_$type]] [lindex $tab 2]
        } -result [list tarray_table 1 [list [crep $type {}]]]

        test table_create-$type-1.1 {
            Test creation of table with initial list
        } -body {
            tarray::table create [list _$type $type] [samplerows $type]
        } -result [list tarray_table _$type [list [crep $type [samplerange $type]]]] -match list
    }

    test table_create-1.0 {
        Test creation of null columns
    } -body {
        tarray::table create {}
    } -result [list tarray_table {} {}]

    test table_create-1.1 {
        Test creation of null lists
    } -body {
        tarray::table create {} {}
   } -result [list tarray_table {} {}]
    
    test table_create-2.0 {
        Test creation table using rows
    } -body {
        set types {any string boolean byte double int uint wide }
        set tab [tarray::table create [col_def $types] [samplerows $types]]
        tlequal $tab [col_def $types] [list \
                          [samplerange any ] \
                          [samplerange string ] \
                          [samplerange boolean ] \
                          [samplerange byte ] \
                          [samplerange double ] \
                          [samplerange int ] \
                          [samplerange uint ] \
                          [samplerange wide ]]
    } -result 1

    test table_create-2.1 {
        Test creation table using a table
    } -body {
        set types {any string boolean byte double int uint wide }
        set tab [tarray::table create [col_def $types] [samplerows $types]]
        set tab2 [tarray::table create [col_def $types] $tab]
        tequal $tab $tab2
    } -result 1

    test table_create-2.2 {
        Test creation table using a wider table
    } -body {
        set types {any string boolean byte double int uint wide }
        set tab [tarray::table create [col_def $types] [samplerows $types]]
        set tab2 [tarray::table create [col_def [lrange $types 0 end-1]] $tab]
        tlequal $tab2 [col_def [lrange $types 0 end-1]]  [list \
                                           [samplerange any ] \
                                           [samplerange string ] \
                                           [samplerange boolean ] \
                                           [samplerange byte ] \
                                           [samplerange double ] \
                                           [samplerange int ] \
                                           [samplerange uint ]]
    } -result 1

    test table_create-3.0 {
        Test creation with duplicate column names
    } -body {
        tarray::table::create {colname int colname wide}
    } -result "Duplicate column name 'colname'." -returnCodes error

    test table_create-3.1 {
        Test creation with invalid initializer list
    } -body {
        tarray::table::create [list anycol any intcol int] {{somestring notanint}}
    } -result "*expected integer*" -returnCodes error -match glob

    test table_create-3.2 {
        Test creation with invalid column name
    } -body {
        tarray::table::create [list 0col any intcol int] {{somestring 0}}
    } -result "Invalid column name syntax." -returnCodes error

    test table_create-3.3 {
        Test creation with invalid column name
    } -body {
        tarray::table::create [list "col umn" any intcol int] {{somestring 0}}
    } -result "Invalid column name syntax." -returnCodes error

    test table_create-3.4 {
        Test creation with invalid column name
    } -body {
        tarray::table::create [list anycol any "" int] {{somestring 0}}
    } -result "Invalid column name syntax." -returnCodes error

    test table_create-3.5 {
        Test creation with missing type
    } -body {
        tarray::table::create [list anycol any intcol int boolean] {{somestring 0}}
    } -result "bad TArrayType \"\": must be boolean, uint, int, wide, double, byte, any, or string" -returnCodes error

    test table_create-3.6 {
        Test creation with bad type
    } -body {
        tarray::table::create [list anycol any intcol int fubcol fub] {{somestring 0}}
    } -result "bad TArrayType \"fub\": must be boolean, uint, int, wide, double, byte, any, or string" -returnCodes error

    test table_create-3.7 {
        Test creation table using a narrower table
    } -body {
        set types {any string boolean byte double int uint wide }
        set tab [tarray::table create [col_def [lrange $types 0 end-1]] [samplerows [lrange $types 0 end-1]]]
        set tab2 [tarray::table create [col_def $types] $tab]
    } -result "Row or table width 7 less than destination width 8." -returnCodes error

    test table_from_string-1.0 {
        Verify generation of table from string - bug #17
    } -body {
        tarray::table size {tarray_table {f0 f1 f2} {{tarray_column int {99}} {tarray_column int {99}} {tarray_column int {99}}}}
    } -result 1

    test table_from_string-1.1 {
        Verify generation of table from string - bug #17
    } -body {
        tarray::table size \
            [list tarray_table {f0 f1 f2 f3 f4 f5 f6 f7} \
                 [list \
                      [list tarray_column any [samplerange any 0 99]] \
                      [list tarray_column string [samplerange string 0 99]] \
                      [list tarray_column boolean [samplerange boolean 0 99]] \
                      [list tarray_column byte    [samplerange byte 0 99]] \
                      [list tarray_column double [samplerange double 0 99]] \
                      [list tarray_column int [samplerange int 0 99]] \
                      [list tarray_column wide [samplerange wide 0 99]] \
                      [list tarray_column uint [samplerange uint 0 99]]]]
    } -result 100

    test table_from_string-2.0 {
        Verify error in first col length in generation of table from string
    } -body {
        tarray::table size \
            [list tarray_table {f0 f1 f2 f3 f4 f5 f6 f7} \
                 [list \
                      [list tarray_column any [samplerange any 0 100]] \
                      [list tarray_column string [samplerange string 0 100]] \
                      [list tarray_column boolean [samplerange boolean 0 99]] \
                      [list tarray_column byte    [samplerange byte 0 99]] \
                      [list tarray_column double [samplerange double 0 99]] \
                      [list tarray_column int [samplerange int 0 99]] \
                      [list tarray_column wide [samplerange wide 0 99]] \
                      [list tarray_column uint [samplerange uint 0 99]]]]
    } -result "Columns in tarray table have differing lengths." -returnCodes error

    test table_from_string-2.1 {
        Verify error in last col length in generation of table from string
    } -body {
        tarray::table size \
            [list tarray_table {f0 f1 f2 f3 f4 f5 f6 f7} \
                 [list \
                      [list tarray_column any [samplerange any 0 99]] \
                      [list tarray_column string [samplerange string 0 99]] \
                      [list tarray_column boolean [samplerange boolean 0 99]] \
                      [list tarray_column byte    [samplerange byte 0 99]] \
                      [list tarray_column double [samplerange double 0 99]] \
                      [list tarray_column int [samplerange int 0 99]] \
                      [list tarray_column wide [samplerange wide 0 99]] \
                      [list tarray_column uint [samplerange uint 0 98]]]]
    } -result "Columns in tarray table have differing lengths." -returnCodes error

}

::tcltest::cleanupTests
