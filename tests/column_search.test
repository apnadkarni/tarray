# column search tests

source testutil.tcl

namespace eval tarray::test {

    foreach type {any boolean byte double int uint wide} {

        test column_search-$type-eq-1.0 {
            Search an empty column
        } -body {
            tarray::column search -eq [newcolumn $type] [samplevalue $type]
        } -result -1

        test column_search-$type-eq-1.1 {
            Search an empty column -all
        } -body {
            tarray::column search -eq -all [newcolumn $type] [samplevalue $type]
        } -result [crep int {}] -match column

        test column_search-$type-eq-1.2 {
            Search an empty column -inline
        } -body {
            tarray::column search -eq -inline [newcolumn $type] [samplevalue $type]
        } -result {}

        test column_search-$type-eq-1.3 {
            Search an empty column -inline -all
        } -body {
            tarray::column search -eq -inline -all [newcolumn $type] [samplevalue $type]
        } -result [crep $type {}] -match column

        test column_search-$type-eq-1.4 {
            Search an empty column -not
        } -body {
            tarray::column search -eq -not [newcolumn $type] [samplevalue $type]
        } -result -1

        test column_search-$type-eq-1.5 {
            Search an empty column -not -inline
        } -body {
            tarray::column search -eq -not -inline [newcolumn $type] [samplevalue $type]
        } -result {}

        test column_search-$type-eq-1.6 {
            Search an empty column -not -inline -all
        } -body {
            tarray::column search -eq -not -all -inline [newcolumn $type] [samplevalue $type]
        } -result [crep $type {}] -match column


        test column_search-$type-eq-2.0 {
            Match on first element
        } -body {
            tarray::column search -eq [samplecolumn $type] [samplevalue $type 0]
        } -result 0

        test column_search-$type-eq-2.1 {
            Match on last element
        } -body {
            # Note last element may occur multiple times
            tarray::column search -eq [samplecolumn $type] [samplevalue $type end]
        } -result [lsearch -exact [samplerange $type] [samplevalue $type end]]

        test column_search-$type-eq-2.2 {
            Match -eq -inline
        } -body {
            # Note last element may occur multiple times
            tarray::column search -inline -eq [samplecolumn $type] [samplevalue $type end]
        } -result [lsearch -exact -inline [samplerange $type] [samplevalue $type end]]

        test column_search-$type-eq-2.3 {
            Match -eq -all
        } -body {
            tarray::column search -all -eq [samplecolumn $type] [samplevalue $type 0]
        } -result [crep int [lsearch -exact -all [samplerange $type] [samplevalue $type 0]]] -match column

        test column_search-$type-eq-2.4 {
            Match -eq -all (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -eq [newcolumn $type $l] $val] int [lsearch -exact -all $l $val]
        } -result 1

        test column_search-$type-eq-2.5 {
            Match -eq -all -inline (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -inline -eq [newcolumn $type $l] $val] $type [lsearch -exact -all -inline $l $val]
        } -result 1

        test column_search-$type-eq-2.6 {
            Match -eq -not
        } -body {
            tarray::column search -eq -not [newcolumn $type {0 0 0 0 1 0 0}] 0
        } -result 4

        test column_search-$type-eq-2.7 {
            Match -eq -not -inline
        } -body {
            tarray::column search -eq -not -inline [samplecolumn $type] [samplevalue $type 0]
        } -result [samplevalue $type 1]

        test column_search-$type-eq-2.8 {
            Match -eq -not -all (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -not -eq [newcolumn $type $l] $val] int [lsearch -exact -all -not $l $val]
        } -result 1
            
        test column_search-$type-eq-2.9 {
            Match -eq -not -all -inline (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -inline -all -not -eq [newcolumn $type $l] $val] $type [lsearch -exact -all -not -inline $l $val]
        } -result 1
            
        test column_search-$type-eq-2.10 {
            Match -eq -all -start
        } -body {
            tarray::column search -start 1 -all -eq [samplecolumn $type] [samplevalue $type 0]
        } -result [crep int [lsearch -start 1 -exact -all [samplerange $type] [samplevalue $type 0]]] -match column

        test column_search-$type-eq-2.11 {
            Match -eq -all -start (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -eq -start 10 [newcolumn $type $l] $val] int [lsearch -exact -all -start 10 $l $val]
        } -result 1

        test column_search-$type-eq-2.12 {
            Match -eq -all -inline -start (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 3 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -inline -start 4 -eq [newcolumn $type $l] $val] $type [lsearch -exact -all -inline -start 4 $l $val]
        } -result 1

        test column_search-$type-eq-2.13 {
            Match -eq -not -start
        } -body {
            tarray::column search -eq -not -start 4 [newcolumn $type {0 0 0 1 0 0 1 0}] 0
        } -result 6

        test column_search-$type-eq-2.14 {
            Match -eq -not -start -inline
        } -body {
            tarray::column search -eq -not -inline -start 4 [newcolumn $type {0 0 0 1 0 0  0}] 0
        } -result ""

        test column_search-$type-eq-2.15 {
            Match -eq -not -inline -start -all
        } -body {
            set val [samplemax $type]
            set l [linsert [samplerange $type] 0 $val]
            lappend l $val
            set notval [samplemin $type]
            clequal [tarray::column search -eq  -all -not -inline -start 1 [newcolumn $type $l] $notval] $type [lsearch -exact -all -not -inline -start 1 $l $notval]
        } -result 1
            
        test column_search-$type-eq-2.16 {
            Match -start -1
        } -body {
            tarray::column search -eq -start -1 [samplecolumn $type] [samplevalue $type 0]
        } -result 0

        test column_search-$type-eq-2.17 {
            Match -start out of bounds
        } -body {
            tarray::column search -eq -start 10000000 [samplecolumn $type] [samplevalue $type 0]
        } -result -1

        test column_search-$type-eq-2.18 {
            Match -start out of bounds
        } -body {
            tarray::column search -eq -inline -all -start 10000000 [samplecolumn $type] [samplevalue $type 0]
        } -result [crep $type {}] -match column

        test column_search-$type-eq-3.0 {
            Match -start end
        } -body {
            tarray::column search -eq -start end [newcolumn $type {0 0 0 0 1}] 1
        } -returnCodes error -result "*expected*but got*" -match glob

        if {$type ne "any"} {
            test column_search-$type-eq-3.1 {
                Match invalid value
            } -body {
                tarray::column search -eq [samplecolumn $type] [lindex [badvalues $type] 0]
            } -returnCodes error -result "*expected*but got*" -match glob
        }            

        test column_search-$type-eq-4.0 {
            Verify that -eq is default operation
        } -body {
            tarray::column search [samplecolumn $type] [samplevalue $type 0]
        } -result 0

        test column_search-$type-eq-5.0 {
            Match missing element
        } -body {
            set val [samplemax $type]
            tarray::column search -eq [newcolumn $type [samplefilter $type $val]] $val
        } -result -1

        test column_search-$type-eq-5.1 {
            Match missing element -inline
        } -body {
            set val [samplemax $type]
            tarray::column search -eq -inline [newcolumn $type [samplefilter $type $val]] $val
        } -result ""

        test column_search-$type-eq-5.2 {
            Match missing element -all
        } -body {
            set val [samplemax $type]
            tarray::column search -eq -all [newcolumn $type [samplefilter $type $val]] $val
        } -result [crep int {}]


        test column_search-$type-eq-5.3 {
            Match missing element -all
        } -body {
            set val [samplemax $type]
            tarray::column search -eq -all -inline [newcolumn $type [samplefilter $type $val]] $val
        } -result [crep $type {}]
        

        if {$type eq "boolean"} continue; # Remaining tests not valid for bools

        foreach op {-gt -lt} {

            test column_search-$type$op-1.0 {
                Search an empty column
            } -body {
                tarray::column search $op [newcolumn $type] [samplevalue $type]
            } -result -1

            test column_search-$type$op-1.1 {
                Search an empty column -all
            } -body {
                tarray::column search $op -all [newcolumn $type] [samplevalue $type]
            } -result [crep int {}] -match column

            test column_search-$type$op-1.2 {
                Search an empty column -inline
            } -body {
                tarray::column search $op -inline [newcolumn $type] [samplevalue $type]
            } -result {}

            test column_search-$type$op-1.3 {
                Search an empty column -inline -all
            } -body {
                tarray::column search $op -inline -all [newcolumn $type] [samplevalue $type]
            } -result [crep $type {}] -match column

            test column_search-$type$op-1.4 {
                Search an empty column -not
            } -body {
                tarray::column search $op -not [newcolumn $type] [samplevalue $type]
            } -result -1

            test column_search-$type$op-1.5 {
                Search an empty column -not -inline
            } -body {
                tarray::column search $op -not -inline [newcolumn $type] [samplevalue $type]
            } -result {}

            test column_search-$type$op-1.6 {
                Search an empty column -not -inline -all
            } -body {
                tarray::column search $op -not -all -inline [newcolumn $type] [samplevalue $type]
            } -result [crep $type {}] -match column


            test column_search-$type$op-2.0 {
                Match on first element
            } -body {
                set val [expr {$op eq "-lt" ? [samplemax $type] : [samplemin $type]}]
                set l [samplefilter $type $val]
                tarray::column search $op [newcolumn $type $l] $val
            } -result 0

            test column_search-$type$op-2.1 {
                Match on any element
            } -body {
                set val [expr {$op eq "-lt" ? [samplemax $type] : [samplemin $type]}]
                set l [linsert [samplefilter $type $val] 0 {*}[lrepeat 50 $val]]
                tarray::column search $op [newcolumn $type $l] $val
            } -result 50

            test column_search-$type$op-2.2 {
                Match $op -inline
            } -body {
                set val [expr {$op eq "-lt" ? [samplemax $type] : [samplemin $type]}]
                set l [linsert [samplefilter $type $val] 0 {*}[lrepeat 50 $val]]
                expr {[tarray::column search $op -inline [newcolumn $type $l] $val] == [lindex $l 50]}
            } -result 1

            test column_search-$type$op-2.3 {
                Match $op -all
            } -body {
                set val [expr {$op eq "-lt" ? [samplemax $type] : [samplemin $type]}]
                tarray::column search -all $op [samplecolumn $type] [samplevalue $type 0]
            } -result [crep int [lsearch -exact -all [samplerange $type] [samplevalue $type 0]]] -match column

            test column_search-$type$op-2.4 {
                Match $op -all (ensure duplicates)
            } -body {
                set val [samplevalue $type 0]
                set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
                lappend l $val
                clequal [tarray::column search -all $op [newcolumn $type $l] $val] int [lsearch -exact -all $l $val]
            } -result 1

            test column_search-$type$op-2.5 {
                Match $op -all -inline (ensure duplicates)
            } -body {
                set val [samplevalue $type 0]
                set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
                lappend l $val
                clequal [tarray::column search -all -inline $op [newcolumn $type $l] $val] $type [lsearch -exact -all -inline $l $val]
            } -result 1

            test column_search-$type$op-2.6 {
                Match $op -not
            } -body {
                tarray::column search $op -not [newcolumn $type {0 0 0 0 1 0 0}] 0
            } -result 4

            test column_search-$type$op-2.7 {
                Match $op -not -inline
            } -body {
                tarray::column search $op -not -inline [samplecolumn $type] [samplevalue $type 0]
            } -result [samplevalue $type 1]

            test column_search-$type$op-2.8 {
                Match $op -not -all (ensure duplicates)
            } -body {
                set val [samplevalue $type 0]
                set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
                lappend l $val
                clequal [tarray::column search -all -not $op [newcolumn $type $l] $val] int [lsearch -exact -all -not $l $val]
            } -result 1
            
            test column_search-$type$op-2.9 {
                Match $op -not -all -inline (ensure duplicates)
            } -body {
                set val [samplevalue $type 0]
                set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
                lappend l $val
                clequal [tarray::column search -inline -all -not $op [newcolumn $type $l] $val] $type [lsearch -exact -all -not -inline $l $val]
            } -result 1
            
            test column_search-$type$op-2.10 {
                Match $op -all -start
            } -body {
                tarray::column search -start 1 -all $op [samplecolumn $type] [samplevalue $type 0]
            } -result [crep int [lsearch -start 1 -exact -all [samplerange $type] [samplevalue $type 0]]] -match column

            test column_search-$type$op-2.11 {
                Match $op -all -start (ensure duplicates)
            } -body {
                set val [samplevalue $type 0]
                set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
                lappend l $val
                clequal [tarray::column search -all $op -start 10 [newcolumn $type $l] $val] int [lsearch -exact -all -start 10 $l $val]
            } -result 1

            test column_search-$type$op-2.12 {
                Match $op -all -inline -start (ensure duplicates)
            } -body {
                set val [samplevalue $type 0]
                set l [linsert [linsert [samplerange $type] 3 $val] end-5 $val]
                lappend l $val
                clequal [tarray::column search -all -inline -start 4 $op [newcolumn $type $l] $val] $type [lsearch -exact -all -inline -start 4 $l $val]
            } -result 1

            test column_search-$type$op-2.13 {
                Match $op -not -start
            } -body {
                tarray::column search $op -not -start 4 [newcolumn $type {0 0 0 1 0 0 1 0}] 0
            } -result 6

            test column_search-$type$op-2.14 {
                Match $op -not -start -inline
            } -body {
                tarray::column search $op -not -inline -start 4 [newcolumn $type {0 0 0 1 0 0  0}] 0
            } -result ""

            test column_search-$type$op-2.15 {
                Match $op -not -inline -start -all
            } -body {
                set val [samplemax $type]
                set l [linsert [samplerange $type] 0 $val]
                lappend l $val
                set notval [samplemin $type]
                clequal [tarray::column search $op  -all -not -inline -start 1 [newcolumn $type $l] $notval] $type [lsearch -exact -all -not -inline -start 1 $l $notval]
            } -result 1
            
            test column_search-$type$op-2.16 {
                Match -start -1
            } -body {
                tarray::column search $op -start -1 [samplecolumn $type] [samplevalue $type 0]
            } -result 0

            test column_search-$type$op-2.17 {
                Match -start out of bounds
            } -body {
                tarray::column search $op -start 10000000 [samplecolumn $type] [samplevalue $type 0]
            } -result -1

            test column_search-$type$op-2.18 {
                Match -start out of bounds
            } -body {
                tarray::column search $op -inline -all -start 10000000 [samplecolumn $type] [samplevalue $type 0]
            } -result [crep $type {}] -match column

            test column_search-$type$op-4.0 {
                Verify that $op is default operation
            } -body {
                tarray::column search [samplecolumn $type] [samplevalue $type 0]
            } -result 0

            test column_search-$type$op-3.0 {
                Match -start end
            } -body {
                tarray::column search $op -start end [newcolumn $type {0 0 0 0 1}] 1
            } -returnCodes error -result "*expected*but got*" -match glob

            if {$type ne "any"} {
                test column_search-$type$op-3.1 {
                    Match invalid value
                } -body {
                    tarray::column search $op [samplecolumn $type] [lindex [badvalues $type] 0]
                } -returnCodes error -result "*expected*but got*" -match glob
            }            

            test column_search-$type$op-5.0 {
                Match missing element
            } -body {
                set val [samplemax $type]
                tarray::column search $op [newcolumn $type [samplefilter $type $val]] $val
            } -result -1

            test column_search-$type$op-5.1 {
                Match missing element -inline
            } -body {
                set val [samplemax $type]
                tarray::column search $op -inline [newcolumn $type [samplefilter $type $val]] $val
            } -result ""

            test column_search-$type$op-5.2 {
                Match missing element -all
            } -body {
                set val [samplemax $type]
                tarray::column search $op -all [newcolumn $type [samplefilter $type $val]] $val
            } -result [crep int {}]


            test column_search-$type$op-5.3 {
                Match missing element -all
            } -body {
                set val [samplemax $type]
                tarray::column search $op -all -inline [newcolumn $type [samplefilter $type $val]] $val
            } -result [crep $type {}]

        }

        if {$type ne "any"} continue; # Remaining tests only valid for "any"

        # -pat
        # -re
        # -nocase

    }
}

::tcltest::cleanupTests
