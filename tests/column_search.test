# column search tests

source testutil.tcl

namespace eval tarray::test {


    foreach type {any boolean byte double int uint wide} {

        test column_search-$type-eq-1.0 {
            Search an empty column
        } -body {
            tarray::column search -eq [newcolumn $type] [samplevalue $type]
        } -result -1

        test column_search-$type-eq-1.1 {
            Search an empty column -all
        } -body {
            tarray::column search -eq -all [newcolumn $type] [samplevalue $type]
        } -result [crep int {}] -match column

        test column_search-$type-eq-1.2 {
            Search an empty column -inline
        } -body {
            tarray::column search -eq -inline [newcolumn $type] [samplevalue $type]
        } -result {}

        test column_search-$type-eq-1.3 {
            Search an empty column -inline -all
        } -body {
            tarray::column search -eq -inline -all [newcolumn $type] [samplevalue $type]
        } -result [crep $type {}] -match column

        test column_search-$type-eq-1.4 {
            Search an empty column -not
        } -body {
            tarray::column search -eq -not [newcolumn $type] [samplevalue $type]
        } -result -1

        test column_search-$type-eq-1.5 {
            Search an empty column -not -inline
        } -body {
            tarray::column search -eq -not -inline [newcolumn $type] [samplevalue $type]
        } -result {}

        test column_search-$type-eq-1.6 {
            Search an empty column -not -inline -all
        } -body {
            tarray::column search -eq -not -all -inline [newcolumn $type] [samplevalue $type]
        } -result [crep $type {}] -match column


        test column_search-$type-eq-2.0 {
            Match on first element
        } -body {
            tarray::column search -eq [samplecolumn $type] [samplevalue $type 0]
        } -result 0

        test column_search-$type-eq-2.1 {
            Match on last element
        } -body {
            # Note last element may occur multiple times
            tarray::column search -eq [samplecolumn $type] [samplevalue $type end]
        } -result [lsearch -exact [samplerange $type] [samplevalue $type end]]

        test column_search-$type-eq-2.2 {
            Match -eq -inline
        } -body {
            # Note last element may occur multiple times
            tarray::column search -inline -eq [samplecolumn $type] [samplevalue $type end]
        } -result [lsearch -exact -inline [samplerange $type] [samplevalue $type end]]

        test column_search-$type-eq-2.3 {
            Match -eq -all
        } -body {
            tarray::column search -all -eq [samplecolumn $type] [samplevalue $type 0]
        } -result [crep int [lsearch -exact -all [samplerange $type] [samplevalue $type 0]]] -match column

        test column_search-$type-eq-2.4 {
            Match -eq -all (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -eq [newcolumn $type $l] $val] int [lsearch -exact -all $l $val]
        } -result 1

        test column_search-$type-eq-2.5 {
            Match -eq -all -inline (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -inline -eq [newcolumn $type $l] $val] $type [lsearch -exact -all -inline $l $val]
        } -result 1

        test column_search-$type-eq-2.6 {
            Match -eq -not
        } -body {
            tarray::column search -eq -not [newcolumn $type {0 0 0 0 1 0 0}] 0
        } -result 4

        test column_search-$type-eq-2.7 {
            Match -eq -not -inline
        } -body {
            tarray::column search -eq -not -inline [samplecolumn $type] [samplevalue $type 0]
        } -result [samplevalue $type 1]

        test column_search-$type-eq-2.8 {
            Match -eq -not -all (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -not -eq [newcolumn $type $l] $val] int [lsearch -exact -all -not $l $val]
        } -result 1
            
        test column_search-$type-eq-2.9 {
            Match -eq -not -all -inline (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -inline -all -not -eq [newcolumn $type $l] $val] $type [lsearch -exact -all -not -inline $l $val]
        } -result 1
            
        test column_search-$type-eq-2.10 {
            Match -eq -all -start
        } -body {
            tarray::column search -start 1 -all -eq [samplecolumn $type] [samplevalue $type 0]
        } -result [crep int [lsearch -start 1 -exact -all [samplerange $type] [samplevalue $type 0]]] -match column

        test column_search-$type-eq-2.11 {
            Match -eq -all -start (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 0 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -eq -start 10 [newcolumn $type $l] $val] int [lsearch -exact -all -start 10 $l $val]
        } -result 1

        test column_search-$type-eq-2.12 {
            Match -eq -all -inline -start (ensure duplicates)
        } -body {
            set val [samplevalue $type 0]
            set l [linsert [linsert [samplerange $type] 3 $val] end-5 $val]
            lappend l $val
            clequal [tarray::column search -all -inline -start 4 -eq [newcolumn $type $l] $val] $type [lsearch -exact -all -inline -start 4 $l $val]
        } -result 1

        test column_search-$type-eq-2.13 {
            Match -eq -not -start
        } -body {
            tarray::column search -eq -not -start 4 [newcolumn $type {0 0 0 1 0 0 1 0}] 0
        } -result 6

        test column_search-$type-eq-2.14 {
            Match -eq -not -start -inline
        } -body {
            tarray::column search -eq -not -inline -start 4 [newcolumn $type {0 0 0 1 0 0  0}] 0
        } -result ""

        test column_search-$type-eq-2.15 {
            Match -eq -not -inline -start -all
        } -body {
            set val [samplemax $type]
            set l [linsert [samplerange $type] 0 $val]
            lappend l $val
            set notval [samplemin $type]
            clequal [tarray::column search -eq  -all -not -inline -start 1 [newcolumn $type $l] $notval] $type [lsearch -exact -all -not -inline -start 1 $l $notval]
        } -result 1
            
        test column_search-$type-eq-2.16 {
            Match -start -1
        } -body {
            tarray::column search -eq -start -1 [samplecolumn $type] [samplevalue $type 0]
        } -result 0

        test column_search-$type-eq-2.17 {
            Match -start out of bounds
        } -body {
            tarray::column search -eq -start 10000000 [samplecolumn $type] [samplevalue $type 0]
        } -result -1

        test column_search-$type-eq-2.18 {
            Match -start out of bounds
        } -body {
            tarray::column search -eq -inline -all -start 10000000 [samplecolumn $type] [samplevalue $type 0]
        } -result [crep $type {}] -match column

        test column_search-$type-eq-3.0 {
            Match -start end
        } -body {
            tarray::column search -eq -start end [newcolumn $type {0 0 0 0 1}] 1
        } -returnCodes error -result "*expected*but got*" -match glob

        if {$type ne "any"} {
            test column_search-$type-eq-3.1 {
                Match invalid value
            } -body {
                tarray::column search -eq [samplecolumn $type] [lindex [badvalues $type] 0]
            } -returnCodes error -result "*expected*but got*" -match glob
        }            

        test column_search-$type-eq-4.0 {
            Verify that -eq is default operation
        } -body {
            tarray::column search [samplecolumn $type] [samplevalue $type 0]
        } -result 0

        test column_search-$type-eq-5.0 {
            Match missing element
        } -body {
            set val [samplemax $type]
            tarray::column search -eq [newcolumn $type [samplefilter $type $val]] $val
        } -result -1

        test column_search-$type-eq-5.1 {
            Match missing element -inline
        } -body {
            set val [samplemax $type]
            tarray::column search -eq -inline [newcolumn $type [samplefilter $type $val]] $val
        } -result ""

        test column_search-$type-eq-5.2 {
            Match missing element -all
        } -body {
            set val [samplemax $type]
            tarray::column search -eq -all [newcolumn $type [samplefilter $type $val]] $val
        } -result [crep int {}]


        test column_search-$type-eq-5.3 {
            Match missing element -all
        } -body {
            set val [samplemax $type]
            tarray::column search -eq -all -inline [newcolumn $type [samplefilter $type $val]] $val
        } -result [crep $type {}]
        
    }

    # NOTE remaining tests are not valid for booleans.
    # Using the sample data for non-equality 
    # searches is not convenient so we have to list test data separately.

    foreach type {any byte double int uint wide} {
        foreach op {-gt -lt} {
            test column_search-$type$op-1.0 {
                Search an empty column
            } -body {
                tarray::column search $op [newcolumn $type] [samplevalue $type]
            } -result -1

            test column_search-$type$op-1.1 {
                Search an empty column -all
            } -body {
                tarray::column search $op -all [newcolumn $type] [samplevalue $type]
            } -result [crep int {}] -match column

            test column_search-$type$op-1.2 {
                Search an empty column -inline
            } -body {
                tarray::column search $op -inline [newcolumn $type] [samplevalue $type]
            } -result {}

            test column_search-$type$op-1.3 {
                Search an empty column -inline -all
            } -body {
                tarray::column search $op -inline -all [newcolumn $type] [samplevalue $type]
            } -result [crep $type {}] -match column

            test column_search-$type$op-1.4 {
                Search an empty column -not
            } -body {
                tarray::column search $op -not [newcolumn $type] [samplevalue $type]
            } -result -1

            test column_search-$type$op-1.5 {
                Search an empty column -not -inline
            } -body {
                tarray::column search $op -not -inline [newcolumn $type] [samplevalue $type]
            } -result {}

            test column_search-$type$op-1.6 {
                Search an empty column -not -inline -all
            } -body {
                tarray::column search $op -not -all -inline [newcolumn $type] [samplevalue $type]
            } -result [crep $type {}] -match column
        }
    }
        
    #
    # Numeric types
    foreach type {byte double int uint wide} {
        test column_search-$type-lt-2.0 {
            Match on first element
        } -body {
            tarray::column search -lt [newcolumn $type {5 10 128 255}] 100
        } -result 0

        test column_search-$type-lt-2.1 {
            Match on last element
        } -body {
            tarray::column search -lt [newcolumn $type {100 101 102 99}] 100
        } -result 3

        test column_search-$type-lt-2.2 {
            Match in middle, unsorted list
        } -body {
            tarray::column search -lt [newcolumn $type {
                128 180 75 75 10 230 250
            }] 100
        } -result 2

        test column_search-$type-lt-2.3 {
            Match -inline
        } -body {
            tarray::column search -lt -inline [newcolumn $type {
                128 180 75 75 10 230 250
            }] 75
        } -result 10 -match numeric

        test column_search-$type-lt-2.3 {
            Match -all (one element)
        } -body {
            tarray::column search -lt -all [newcolumn $type {
                128 180 70 75 128 230 128
            }] 75
        } -result [crep int {2}] -match column

        test column_search-$type-lt-2.4 {
            Match -all
        } -body {
            tarray::column search -lt -all [newcolumn $type {
                128 180 75 75 128 230 128
            }] 180
        } -result [crep int {0 2 3 4 6}] -match column

        test column_search-$type-lt-2.5 {
            Match -all -inline
        } -body {
            tarray::column search -lt -all -inline [newcolumn $type {
                28 180 75 75 128 230 128
            }] 128
        } -result [crep $type {28 75 75}] -match column

        test column_search-$type-lt-3.0 {
            Match on first element -not (when equal)
        } -body {
            tarray::column search -lt -not [newcolumn $type {
                100 5 10 128 255
            }] 100
        } -result 0

        test column_search-$type-lt-3.1 {
            Match on first element -not (when greater)
        } -body {
            tarray::column search -lt -not [newcolumn $type {
                110 5 10 128 255
            }] 100
        } -result 0

        test column_search-$type-lt-3.2 {
            Match on last element -not (when equal)
        } -body {
            tarray::column search -lt -not [newcolumn $type {5 10 128 254}] 254
        } -result 3

        test column_search-$type-lt-3.3 {
            Match on last element -not (when greater)
        } -body {
            tarray::column search -lt -not [newcolumn $type {5 10 128 255}] 254
        } -result 3

        test column_search-$type-lt-3.4 {
            Match in middle -not (equal)
        } -body {
            tarray::column search -lt -not [newcolumn $type {
                128 180 75 75 10 230 250
            }] 230
        } -result 5

        test column_search-$type-lt-3.5 {
            Match in middle -not (equal)
        } -body {
            tarray::column search -lt -not [newcolumn $type {
                128 180 75 75 10 230 250
            }] 150
        } -result 1

        test column_search-$type-lt-3.6 {
            Match -not -inline (equal)
        } -body {
            tarray::column search -lt -not -inline [newcolumn $type {
                28 18 100 100 75 10 230 250
            }] 100
        } -result 100 -match numeric

        test column_search-$type-lt-3.7 {
            Match -not -inline (greater)
        } -body {
            tarray::column search -lt -not -inline [newcolumn $type {
                28 18 110 75 10 230 250
            }] 100
        } -result 110 -match numeric

        test column_search-$type-lt-3.8 {
            Match -not -all (one element)
        } -body {
            tarray::column search -lt -not -all [newcolumn $type {
                28 180 70 75 128 230 128
            }] 230
        } -result [crep int {5}] -match column

        test column_search-$type-lt-3.9 {
            Match -all -not
        } -body {
            tarray::column search -lt -not -all [newcolumn $type {
                128 180 75 75 128 230 128
            }] 128
        } -result [crep int {0 1 4 5 6}] -match column

        test column_search-$type-lt-3.10 {
            Match -not -all -inline
        } -body {
            tarray::column search -lt -not -inline -all [newcolumn $type {
                28 180 75 75 128 230 128
            }] 128
        } -result [crep $type {180 128 230 128}] -match column

        test column_search-$type-lt-4.0 {
            Match on element -start
        } -body {
            tarray::column search -lt -start 1 [newcolumn $type {5 128 10 255}] 200
        } -result 1

        test column_search-$type-lt-4.1 {
            Match fail -start
        } -body {
            tarray::column search -lt -start 2 [newcolumn $type {5 10 128 254}] 50
        } -result -1

        test column_search-$type-lt-4.2 {
            Match -inline -start
        } -body {
            tarray::column search -lt -inline -start 3 [newcolumn $type {
                128 180 75 175 10 230 250
            }] 100
        } -result 10 -match numeric

        test column_search-$type-lt-4.3 {
            Match -all -start (one element)
        } -body {
            tarray::column search -lt -all -start 3 [newcolumn $type {
                128 180 70 125 128 20
            }] 100
        } -result [crep int {5}] -match column

        test column_search-$type-lt-4.4 {
            Match -all -start
        } -body {
            tarray::column search -lt -all -start 3 [newcolumn $type {
                128 180 75 75 128 230 128
            }] 180
        } -result [crep int {3 4 6}] -match column

        test column_search-$type-lt-4.5 {
            Match -all -inline -start
        } -body {
            tarray::column search -lt -all -inline -start 3 [newcolumn $type {
                28 180 75 75 128 30 128
            }] 128
        } -result [crep $type {75 30}] -match column

        test column_search-$type-lt-4.6 {
            Match -start -not
        } -body {
            tarray::column search -not -lt -start 3 [newcolumn $type {
                128 180 75 175 10 230 250
            }] 175
        } -result 3

        test column_search-$type-lt-4.7 {
            Match -inline -start -not -all
        } -body {
            tarray::column search -not -lt -all -inline -start 3 [newcolumn $type {
                128 180 75 175 10 230 250
            }] 200
        } -result [crep $type {230 250}] -match column

        test column_search-$type-lt-4.8 {
            Match -all -inline -start -1
        } -body {
            tarray::column search -lt -all -inline -start -1 [newcolumn $type {
                28 180 75 75 128 30 128
            }] 128
        } -result [crep $type {28 75 75 30}] -match column

        test column_search-$type-lt-4.9 {
            Match -all -inline -start out of bounds
        } -body {
            tarray::column search -lt -all -inline -start 100 [newcolumn $type {
                28 180 75 75 128 30 128
            }] 128
        } -result [crep $type {}] -match column

        test column_search-$type-lt-5.0 {
            Match -start end
        } -body {
            tarray::column search -lt -all -inline -start end [newcolumn $type {
                28 180 75 75 128 30 128
            }] 128
        } -returnCodes error -result "*expected*but got*" -match glob

        test column_search-$type-lt-5.1 {
            Match invalid value
        } -body {
            tarray::column search -lt [newcolumn $type {
                28 180 75 75 128 30 128
            }] nota$type
        } -returnCodes error -result "*expected*but got*" -match glob

        test column_search-$type-lt-6.0 {
            Match missing element
        } -body {
            tarray::column search -lt [newcolumn $type {10 11 12}] 1
        } -result -1

        test column_search-$type-lt-6.1 {
            Match missing element -inline
        } -body {
            tarray::column search -lt -inline [newcolumn $type {10 11 12}] 1
        } -result ""

        test column_search-$type-lt-6.2 {
            Match missing element -all
        } -body {
            tarray::column search -lt -all [newcolumn $type {10 11 12}] 1
        } -result [crep int {}] -match column

        test column_search-$type-lt-6.3 {
            Match missing element -not
        } -body {
            tarray::column search -lt -not [newcolumn $type {0 1 2}] 10
        } -result -1

        test column_search-$type-lt-6.4 {
            Match missing element -not -inline -all
        } -body {
            tarray::column search -not -lt -inline -all [newcolumn $type {0 1 2}] 111
        } -result [crep $type {}] -match column

        test column_search-$type-gt-2.0 {
            Match on first element
        } -body {
            tarray::column search -gt [newcolumn $type {5 10 128 255}] 0
        } -result 0

        test column_search-$type-gt-2.1 {
            Match on last element
        } -body {
            tarray::column search -gt [newcolumn $type {10 11 12 99}] 50
        } -result 3

        test column_search-$type-gt-2.2 {
            Match in middle, unsorted list
        } -body {
            tarray::column search -gt [newcolumn $type {
                28 80 75 75 10 230 250
            }] 100
        } -result 5

        test column_search-$type-gt-2.3 {
            Match -inline
        } -body {
            tarray::column search -gt -inline [newcolumn $type {
                28 18 75 75 10 230 250
            }] 75
        } -result 230 -match numeric

        test column_search-$type-gt-2.3 {
            Match -all (one element)
        } -body {
            tarray::column search -gt -all [newcolumn $type {
                128 180 70 75 128 230 128
            }] 200
        } -result [crep int {5}] -match column

        test column_search-$type-gt-2.4 {
            Match -all
        } -body {
            tarray::column search -gt -all [newcolumn $type {
                128 180 75 75 128 230 228
            }] 150
        } -result [crep int {1 5 6}] -match column

        test column_search-$type-gt-2.5 {
            Match -all -inline
        } -body {
            tarray::column search -gt -all -inline [newcolumn $type {
                28 180 75 75 128 230 255
            }] 128
        } -result [crep $type {180 230 255}] -match column

        test column_search-$type-gt-3.0 {
            Match on first element -not (when equal)
        } -body {
            tarray::column search -gt -not [newcolumn $type {
                100 5 10 128 255
            }] 100
        } -result 0

        test column_search-$type-gt-3.1 {
            Match on first element -not (when less)
        } -body {
            tarray::column search -gt -not [newcolumn $type {
                110 5 10 128 255
            }] 120
        } -result 0

        test column_search-$type-gt-3.2 {
            Match on last element -not (when equal)
        } -body {
            tarray::column search -gt -not [newcolumn $type {5 10 128 1}] 1
        } -result 3

        test column_search-$type-gt-3.3 {
            Match on last element -not (when smaller)
        } -body {
            tarray::column search -gt -not [newcolumn $type {128 255 101 99}] 100
        } -result 3

        test column_search-$type-gt-3.4 {
            Match in middle -not (equal)
        } -body {
            tarray::column search -gt -not [newcolumn $type {
                128 180 75 75 10 230 250
            }] 75
        } -result 2

        test column_search-$type-gt-3.5 {
            Match in middle -not (smaller)
        } -body {
            tarray::column search -gt -not [newcolumn $type {
                128 180 75 75 10 230 250
            }] 100
        } -result 2

        test column_search-$type-gt-3.6 {
            Match -not -inline (equal)
        } -body {
            tarray::column search -gt -not -inline [newcolumn $type {
                128 118 100 100 75 10 230 250
            }] 100
        } -result 100 -match numeric

        test column_search-$type-gt-3.7 {
            Match -not -inline (smaller)
        } -body {
            tarray::column search -gt -not -inline [newcolumn $type {
                128 118 110 75 10 230 250
            }] 100
        } -result 75 -match numeric

        test column_search-$type-gt-3.8 {
            Match -not -all (one element)
        } -body {
            tarray::column search -gt -not -all [newcolumn $type {
                180 170 75 128 230 128
            }] 75
        } -result [crep int {2}] -match column

        test column_search-$type-gt-3.9 {
            Match -all -not
        } -body {
            tarray::column search -gt -not -all [newcolumn $type {
                128 180 75 75 128 230 128
            }] 128
        } -result [crep int {0 2 3 4 6}] -match column

        test column_search-$type-gt-3.10 {
            Match -not -all -inline
        } -body {
            tarray::column search -gt -not -inline -all [newcolumn $type {
                28 180 75 75 128 230 128
            }] 128
        } -result [crep $type {28 75 75 128 128}] -match column

        test column_search-$type-gt-4.0 {
            Match on element -start
        } -body {
            tarray::column search -gt -start 2 [newcolumn $type {5 128 10 255}] 100
        } -result 3

        test column_search-$type-gt-4.1 {
            Match fail -start
        } -body {
            tarray::column search -gt -start 2 [newcolumn $type {51 100 128 25}] 150
        } -result -1

        test column_search-$type-gt-4.2 {
            Match -inline -start
        } -body {
            tarray::column search -gt -inline -start 2 [newcolumn $type {
                28 80 75 175 10 230 250
            }] 75
        } -result 175 -match numeric

        test column_search-$type-gt-4.3 {
            Match -all -start (one element)
        } -body {
            tarray::column search -gt -all -start 3 [newcolumn $type {
                128 180 225 70 128 201
            }] 200
        } -result [crep int {5}] -match column

        test column_search-$type-gt-4.4 {
            Match -all -start
        } -body {
            tarray::column search -gt -all -start 2 [newcolumn $type {
                128 180 75 75 128 230 128
            }] 75
        } -result [crep int {4 5 6}] -match column

        test column_search-$type-gt-4.5 {
            Match -all -inline -start
        } -body {
            tarray::column search -gt -all -inline -start 2 [newcolumn $type {
                28 180 75 75 128 30 128
            }] 75
        } -result [crep $type {128 128}] -match column

        test column_search-$type-gt-4.6 {
            Match -start -not
        } -body {
            tarray::column search -not -gt -start 3 [newcolumn $type {
                128 180 75 175 10 30 250
            }] 175
        } -result 3

        test column_search-$type-gt-4.7 {
            Match -inline -start -not -all
        } -body {
            tarray::column search -not -gt -all -inline -start 2 [newcolumn $type {
                128 80 75 175 10 30 250
            }] 100
        } -result [crep $type {75 10 30}] -match column

        test column_search-$type-gt-4.8 {
            Match -all -inline -start -1
        } -body {
            tarray::column search -gt -all -inline -start -1 [newcolumn $type {
                28 180 75 75 128 30 129
            }] 128
        } -result [crep $type {180 129}] -match column

        test column_search-$type-gt-4.9 {
            Match -all -inline -start out of bounds
        } -body {
            tarray::column search -gt -all -inline -start 100 [newcolumn $type {
                28 180 75 75 128 30 128
            }] 128
        } -result [crep $type {}] -match column

        test column_search-$type-gt-5.0 {
            Match -start end
        } -body {
            tarray::column search -gt -all -inline -start end [newcolumn $type {
                28 180 75 75 128 30 128
            }] 128
        } -returnCodes error -result "*expected*but got*" -match glob

        test column_search-$type-gt-5.1 {
            Match invalid value
        } -body {
            tarray::column search -gt [newcolumn $type {
                28 180 75 75 128 30 128
            }] nota$type
        } -returnCodes error -result "*expected*but got*" -match glob

        test column_search-$type-gt-6.0 {
            Match missing element
        } -body {
            tarray::column search -gt [newcolumn $type {10 11 12}] 100
        } -result -1

        test column_search-$type-gt-6.1 {
            Match missing element -inline
        } -body {
            tarray::column search -gt -inline [newcolumn $type {10 11 12}] 100
        } -result ""

        test column_search-$type-gt-6.2 {
            Match missing element -all
        } -body {
            tarray::column search -gt -all [newcolumn $type {10 11 12}] 100
        } -result [crep int {}] -match column

        test column_search-$type-gt-6.3 {
            Match missing element -not
        } -body {
            tarray::column search -gt -not [newcolumn $type {100 101 102}] 10
        } -result -1

        test column_search-$type-gt-6.4 {
            Match missing element -not -inline -all
        } -body {
            tarray::column search -not -gt -inline -all [newcolumn $type {100 101 102}] 10
        } -result [crep $type {}] -match column
    }

    # Above tests use values common to all integeral types. Add some tests
    # that use type specific values

    test column_search-byte-lt-7.0 {
        Match out of range  value
    } -body {
        tarray::column search -lt [newcolumn byte {
            28 180 75 75 128 30 128
        }] 256
    } -returnCodes error -result "Value 256 not valid for type byte*" -match glob

    test column_search-uint-lt-7.0 {
        Match UINT_MAX (verifying comparisons are unsigned)
    } -body {
        # Make sure 0x80000000 is treated as unsigned and not as -1
        tarray::column search -lt -all [newcolumn uint {0 0x80000000 2}] 10 
    } -result [crep int {0 2}] -match column

    test column_search-uint-lt-7.1 {
        Match UINT_MAX (verifying comparisons are unsigned)
    } -body {
        # Make sure 0x80000000 is treated as unsigned and not as -1
        tarray::column search -lt -not -inline [newcolumn uint {0 0x80000000 2}] 0x7fffffff
    } -result 2147483648

    test column_search-uint-lt-7.2 {
        Match out of range value
    } -body {
        tarray::column search -lt [newcolumn uint {
            28 180 75 75 128 30 128 
        }] 0x100000000
    } -returnCodes error -result "*0x100000000 not valid for type uint*" -match glob

    test column_search-int-lt-7.0 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -lt -all -not [newcolumn int {0 -1 2 -2147483648}] 0
    } -result [crep int {0 2}] -match column

    test column_search-int-lt-7.1 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -lt -inline -all [newcolumn int {0 -1 2 -2147483648}] 0
    } -result [crep int {-1 -2147483648}] -match column

    test column_search-int-lt-7.2 {
        Match out of range value
    } -body {
        tarray::column search -lt -inline -all [newcolumn int {0 -1 2 -2147483648}] -549755813888
    } -returnCodes error -result "Value -549755813888 not valid for type int*" -match glob

    test column_search-wide-lt-7.0 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -lt -all -not [newcolumn wide {0 -1 2 -2147483648 549755813888 -549755813888}] 0
    } -result [crep int {0 2 4}] -match column

    test column_search-wide-lt-7.1 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -lt -inline -all [newcolumn wide {0 -1 2 -2147483648 549755813888 -549755813888}] 0
    } -result [crep wide {-1 -2147483648 -549755813888}] -match column

    test column_search-wide-lt-7.2 {
        Match out of range value
    } -body {
        tarray::column search -lt -inline -all [newcolumn wide {0 -1 2 -2147483648}] 5497558138884584564356934856358
    } -returnCodes error -result "*too large*" -match glob

    test column_search-double-lt-7.0 {
        Match using exponent notation
    } -body {
        tarray::column search -lt -all -inline [newcolumn double {0 -1e-10 2.0 5e5 10.0e3}] 1e5
    } -result [crep double {0.0 -1e-10 2.0 10000.0}] -match column

    test column_search-double-lt-7.1 {
        Match using exponent notation
    } -body {
        tarray::column search -lt -all -not -inline [newcolumn double {0 -1e-10 2.0 5e5 1.0e3 5e20 5e-20}] 1e3
    } -result [crep double {500000.0 1000.0 5e+20}] -match column

    test column_search-byte-gt-7.0 {
        Match out of range  value
    } -body {
        tarray::column search -gt [newcolumn byte {
            28 180 75 75 128 30 128
        }] 256
    } -returnCodes error -result "Value 256 not valid for type byte*" -match glob

    test column_search-uint-gt-7.0 {
        Match UINT_MAX (verifying comparisons are unsigned)
    } -body {
        # Make sure 0x80000000 is treated as unsigned and not as -1
        tarray::column search -gt -all [newcolumn uint {0 0x80000000 100}] 10 
    } -result [crep int {1 2}] -match column

    test column_search-uint-gt-7.1 {
        Match UINT_MAX (verifying comparisons are unsigned)
    } -body {
        # Make sure 0x80000000 is treated as unsigned and not as -1
        tarray::column search -gt -not -inline [newcolumn uint {0x80000000 2}] 0x7fffffff
    } -result 2

    test column_search-uint-gt-7.2 {
        Match out of range value
    } -body {
        tarray::column search -gt [newcolumn uint {
            28 180 75 75 128 30 128 
        }] 0x100000000
    } -returnCodes error -result "*0x100000000 not valid for type uint*" -match glob

    test column_search-int-gt-7.0 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -gt -all -not [newcolumn int {0 -10 2 -2147483648}] -10
    } -result [crep int {1 3}] -match column

    test column_search-int-gt-7.1 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -gt -inline -all [newcolumn int {10 -1 2 -2147483648}] 0
    } -result [crep int {10 2}] -match column

    test column_search-int-gt-7.2 {
        Match out of range value
    } -body {
        tarray::column search -gt -inline -all [newcolumn int {0 -1 2 -2147483648}] -549755813888
    } -returnCodes error -result "Value -549755813888 not valid for type int*" -match glob

    test column_search-wide-gt-7.0 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -gt -all -not [newcolumn wide {0 -1 2 -2147483648 549755813888 -549755813888}] 0
    } -result [crep int {0 1 3 5}] -match column

    test column_search-wide-gt-7.1 {
        Match verifying comparisons are signed
    } -body {
        tarray::column search -gt -inline -all [newcolumn wide {0 -1 2 -2147483648 549755813888 -549755813888}] -2147483648
    } -result [crep wide {0 -1 2 549755813888}] -match column

    test column_search-wide-gt-7.2 {
        Match out of range value
    } -body {
        tarray::column search -gt -inline -all [newcolumn wide {0 -1 2 -2147483648}] 5497558138884584564356934856358
    } -returnCodes error -result "*too large*" -match glob

    test column_search-double-gt-7.0 {
        Match using exponent notation
    } -body {
        tarray::column search -gt -all -inline [newcolumn double {0 -1e-10 2.0 5e5 10.0e3}] 2.0
    } -result [crep double {5e5 10.0e3}] -match column

    test column_search-double-gt-7.1 {
        Match using exponent notation
    } -body {
        tarray::column search -gt -all -not -inline [newcolumn double {0 -1e-10 2.0 5e5 1.0e3 5e20 5e-20}] 1e3
    } -result [crep double {0.0 -1e-10 2.0 1000.0 5e-20}] -match column

    #
    # Now do the "any" type, not -eq we have already done. Need to do the
    # other operators

    test column_search-any-lt-2.0 {
        Find first match
    } -body {
        tarray::column search -lt [newcolumn any {first {with spaces} { leading space} UPPERCASE 10 5.0e5}] abc
    } -result 2

    test column_search-any-lt-2.1 {
        Match on last element
    } -body {
        tarray::column search -lt [newcolumn any {first {with spaces} AAA { leading space} AAA 5.0e5}] ABC
    } -result 2

    test column_search-any-lt-2.2 {
        Match -inline
    } -body {
        tarray::column search -lt -inline [newcolumn any {
            first {with spaces} { leading space} AAA 5.0e5
        }] abc
    } -result { leading space}

    test column_search-any-lt-2.3 {
        Match -all (one element)
    } -body {
        tarray::column search -lt -all [newcolumn any {
            first {with spaces} { leading space} " AAA" zzz
        }] " aaa"
    } -result [crep int {3}] -match column

    test column_search-any-lt-2.4 {
        Match -all
    } -body {
        tarray::column search -lt -all [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] aaa
    } -result [crep int {1 3 4}] -match column
    
    test column_search-any-lt-2.5 {
        Match -all -inline
    } -body {
        tarray::column search -lt -all -inline [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] AAA
    } -result [crep any {{ leading space} 5.0e5}] -match column

    test column_search-any-lt-2.6 {
        Verify comparisons are strings, not numeric
    } -body {
        tarray::column search -lt [newcolumn any {010 1}] 2
    } -result 0

    test column_search-any-lt-3.0 {
        Match -not (equal)
    } -body {
        tarray::column search -not -lt [newcolumn any {ABC second {with spaces} AAA { leading space} AAA 5.0e5}] ABC
    } -result 0

    test column_search-any-lt-3.1 {
        Match on element -not -inline (when greater)
    } -body {
        tarray::column search -not -lt -inline [newcolumn any {{with spaces} ABA { leading space} AAA 5.0e5}] ABC
    } -result {with spaces}

    test column_search-any-lt-3.2 {
        Match on last element -not (when equal)
    } -body {
        tarray::column search -not -lt [newcolumn any {{with spaces} ABA { leading space} AAA 5.0e5 zzz}] zzz
    } -result 5

    test column_search-any-lt-3.3 {
        Match on element -not
    } -body {
        tarray::column search -not -lt [newcolumn any {{with spaces} ABA { leading space} AAA 5.0e5 zzz}] zzz
    } -result 5

    test column_search-any-lt-3.4 {
        Match in middle -not -all
    } -body {
        tarray::column search -not -lt -all [newcolumn any {{with spaces} aaa ABA { leading space} AAA 5.0e5 zzz}] aaa
    } -result [crep int {0 1 6}] -match column

    test column_search-any-lt-3.5 {
        Match in middle -not -inline -all
    } -body {
        tarray::column search -not -lt -inline -all [newcolumn any {{with spaces} aaa ABA { leading space} AAA 5.0e5 zzz}] aaa
    } -result [crep any {{with spaces} aaa zzz}] -match column

    test column_search-any-lt-3.6 {
        Verify comparisons are strings, not numeric (-not -inline)
    } -body {
        tarray::column search -not -lt -inline -all [newcolumn any {010 1 0 10}] 00
    } -result [crep any {010 1 10}] -match column

    test column_search-any-lt-4.0 {
        Match on element -start
    } -body {
        tarray::column search -lt -start 1 [newcolumn any {aaa zzz bbb ccc ddd}] zzz
    } -result 2

    test column_search-any-lt-4.1 {
        Match fail -start
    } -body {
        tarray::column search -lt -start 1 [newcolumn any {aaa zzz bbb ccc ddd}] bbb
    } -result -1

    test column_search-any-lt-4.2 {
        Match -inline -start
    } -body {
        tarray::column search -lt -start 1 -inline [newcolumn any {aaa zzz bbb ccc ddd}] zzz
    } -result bbb

    test column_search-any-lt-4.3 {
        Match -all -start (one element)
    } -body {
        tarray::column search -lt -start 1 -all [newcolumn any {aaa zzz bbb ccc ddd}] ccc
    } -result [crep int {2}] -match column

    test column_search-any-lt-4.4 {
        Match -all -start
    } -body {
        tarray::column search -lt -start 2 -all [newcolumn any {aaa zzz bbb eee ccc ddd}] ddd
    } -result [crep int {2 4}] -match column

    test column_search-any-lt-4.5 {
        Match -all -inline -start
    } -body {
        tarray::column search -lt -start 2 -all -inline [newcolumn any {aaa zzz bbb eee ccc ddd}] ddd
    } -result [crep any {bbb ccc}] -match column

    test column_search-any-lt-4.6 {
        Match -start -not
    } -body {
        tarray::column search -not -lt -start 2 [newcolumn any {aaa zzz bbb eee ccc ddd}] bbb
    } -result 2

    test column_search-any-lt-4.7 {
        Match -inline -start -not -all
    } -body {
        tarray::column search -not -lt -start 2 -all -inline [newcolumn any {aaa zzz bbb eee ccc ddd}] ccc
    } -result [crep any {eee ccc ddd}] -match column

    test column_search-any-lt-4.8 {
        Match -all -inline -start -1
    } -body {
        tarray::column search -lt -start -1 -inline -all [newcolumn any {aaa zzz bbb eee ccc ddd}] ccc
    } -result [crep any {aaa bbb}] -match column

    test column_search-any-lt-4.9 {
        Match -all -inline -start out of bounds
    } -body {
        tarray::column search -lt -start 10 -inline -all [newcolumn any {aaa zzz bbb eee ccc}] ccc
    } -result [crep any {}] -match column

    test column_search-any-lt-4.10 {
        Match -start end
    } -body {
        tarray::column search -lt -start end -inline [newcolumn any {aaa zzz bbb eee ccc}] ccc
    } -returnCodes error -result "*expected*but got*" -match glob

    test column_search-any-lt-6.0 {
        Match missing element
    } -body {
        tarray::column search -lt [newcolumn any {aaa zzz bbb eee ccc}] aaa
    } -result -1

    test column_search-any-lt-6.1 {
        Match missing element -inline
    } -body {
        tarray::column search -lt -inline [newcolumn any {aaa zzz bbb eee ccc}] aaa
    } -result ""

    test column_search-any-lt-6.2 {
        Match missing element -all
    } -body {
        tarray::column search -lt -all [newcolumn any {aaa zzz bbb eee ccc}] aaa
    } -result [crep int {}] -match column

    test column_search-any-lt-6.3 {
        Match missing element -not
    } -body {
        tarray::column search -lt -not [newcolumn any {aaa bbb eee ccc}] zzz
    } -result -1

    test column_search-any-lt-6.4 {
        Match missing element -not -inline -all
    } -body {
        tarray::column search -lt -not -inline -all [newcolumn any {aaa bbb eee ccc}] zzz
    } -result [crep any {}] -match column

    #
    # -gt

    test column_search-any-gt-2.0 {
        Find first match
    } -body {
        tarray::column search -gt [newcolumn any {first {with spaces} { leading space} UPPERCASE 10 5.0e5}] abc
    } -result 0

    test column_search-any-gt-2.1 {
        Match on last element
    } -body {
        tarray::column search -gt [newcolumn any {first {with spaces} AAA { leading space} AAA 5.0e5 zzz}] yyy
    } -result 6

    test column_search-any-gt-2.2 {
        Match -inline
    } -body {
        tarray::column search -gt -inline [newcolumn any {
            abc {with spaces} { leading space} AAA 5.0e5
        }] abc
    } -result {with spaces}

    test column_search-any-gt-2.3 {
        Match -all (one element)
    } -body {
        tarray::column search -gt -all [newcolumn any {
            first {with spaces} { leading space} " AAA" xxx
        }] w
    } -result [crep int {1}] -match column

    test column_search-any-gt-2.4 {
        Match -all
    } -body {
        tarray::column search -gt -all [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] aaa
    } -result [crep int {0 2}] -match column
    
    test column_search-any-gt-2.5 {
        Match -all -inline
    } -body {
        tarray::column search -gt -all -inline [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] AAA
    } -result [crep any {first { leading space} {with spaces}}] -match column

    test column_search-any-gt-2.6 {
        Verify comparisons are strings, not numeric
    } -body {
        tarray::column search -gt [newcolumn any {21 1}] 200
    } -result 0

    test column_search-any-gt-3.0 {
        Match -not (equal)
    } -body {
        tarray::column search -not -gt [newcolumn any {ABC second {with spaces} AAA { leading space} AAA 5.0e5}] ABC
    } -result 0

    test column_search-any-gt-3.1 {
        Match on element -not -inline (when greater)
    } -body {
        tarray::column search -not -gt -inline [newcolumn any {{with spaces} ABA { leading space} AAA 5.0e5}] ABC
    } -result {ABA}

    test column_search-any-gt-3.2 {
        Match on last element -not (when equal)
    } -body {
        tarray::column search -not -gt [newcolumn any {{with spaces} ABA { leading space} AAA 5.0e5}] 5.0e5
    } -result 4

    test column_search-any-gt-3.4 {
        Match in middle -not -all
    } -body {
        tarray::column search -not -gt -all [newcolumn any {{with spaces} aaa ABA { leading space} AAA 5.0e5 zzz}] aaa
    } -result [crep int {1 2 3 4 5}] -match column

    test column_search-any-gt-3.5 {
        Match in middle -not -inline -all
    } -body {
        tarray::column search -not -gt -inline -all [newcolumn any {{with spaces} aaa ABA { leading space} AAA 5.0e5 zzz}] aaa
    } -result [crep any {aaa ABA { leading space} AAA 5.0e5}] -match column

    test column_search-any-gt-3.6 {
        Verify comparisons are strings, not numeric (-not -inline)
    } -body {
        tarray::column search -not -gt -inline -all [newcolumn any {010 1 0}] 1
    } -result [crep any {010 1 0}] -match column

    test column_search-any-gt-4.0 {
        Match on element -start
    } -body {
        tarray::column search -gt -start 1 [newcolumn any {aaa zzz bbb ccc ddd}] aaa
    } -result 2

    test column_search-any-gt-4.1 {
        Match fail -start
    } -body {
        tarray::column search -gt -start 1 [newcolumn any {zzz bbb ccc ddd}] ddd
    } -result -1

    test column_search-any-gt-4.2 {
        Match -inline -start
    } -body {
        tarray::column search -gt -start 2 -inline [newcolumn any {aaa zzz bbb ccc ddd}] ccc
    } -result ddd

    test column_search-any-gt-4.3 {
        Match -all -start (one element)
    } -body {
        tarray::column search -gt -start 2 -all [newcolumn any {aaa zzz bbb ccc ddd}] ccc
    } -result [crep int {4}] -match column

    test column_search-any-gt-4.4 {
        Match -all -start
    } -body {
        tarray::column search -gt -start 2 -all [newcolumn any {aaa zzz bbb eee ccc ddd}] ccc
    } -result [crep int {3 5}] -match column

    test column_search-any-gt-4.5 {
        Match -all -inline -start
    } -body {
        tarray::column search -gt -start 2 -all -inline [newcolumn any {aaa zzz bbb eee ccc ddd}] ccc
    } -result [crep any {eee ddd}] -match column

    test column_search-any-gt-4.6 {
        Match -start -not
    } -body {
        tarray::column search -not -gt -start 1 [newcolumn any {aaa zzz bbb eee ccc ddd}] bbb
    } -result 2

    test column_search-any-gt-4.7 {
        Match -inline -start -not -all
    } -body {
        tarray::column search -not -gt -start 2 -all -inline [newcolumn any {aaa zzz bbb eee ccc ddd}] ccc
    } -result [crep any {bbb ccc}] -match column

    test column_search-any-gt-4.8 {
        Match -all -inline -start -1
    } -body {
        tarray::column search -gt -start -1 -inline -all [newcolumn any {aaa zzz bbb eee ccc ddd}] ccc
    } -result [crep any {zzz eee ddd}] -match column

    test column_search-any-gt-4.9 {
        Match -all -inline -start out of bounds
    } -body {
        tarray::column search -gt -start 10 -inline -all [newcolumn any {aaa zzz bbb eee ccc}] ccc
    } -result [crep any {}] -match column

    test column_search-any-gt-4.10 {
        Match -start end
    } -body {
        tarray::column search -gt -start end -inline [newcolumn any {aaa zzz bbb eee ccc}] ccc
    } -returnCodes error -result "*expected*but got*" -match glob

    test column_search-any-gt-6.0 {
        Match missing element
    } -body {
        tarray::column search -gt [newcolumn any {aaa zzz bbb eee ccc}] aaa
    } -result -1

    test column_search-any-gt-6.1 {
        Match missing element -inline
    } -body {
        tarray::column search -gt -inline [newcolumn any {aaa zzz bbb eee ccc}] zzz
    } -result ""

    test column_search-any-gt-6.2 {
        Match missing element -all
    } -body {
        tarray::column search -gt -all [newcolumn any {aaa zzz bbb eee ccc}] zzz
    } -result [crep int {}] -match column

    test column_search-any-gt-6.3 {
        Match missing element -not
    } -body {
        tarray::column search -gt -not [newcolumn any {zzz bbb eee ccc}] aaa
    } -result -1

    test column_search-any-gt-6.4 {
        Match missing element -not -inline -all
    } -body {
        tarray::column search -gt -not -inline -all [newcolumn any {zzz bbb eee ccc}] aaa
    } -result [crep any {}] -match column

    #
    # -pat

    test column_search-any-pat-1.0 {
        Search empty column
    } -body {
        tarray::column search -pat [newcolumn any {}] *
    } -result -1

    test column_search-any-pat-1.1 {
        Search empty column
    } -body {
        tarray::column search -pat -inline [newcolumn any {}] *
    } -result {}

    test column_search-any-pat-2.0 {
        Match on first element
    } -body {
        tarray::column search -pat [newcolumn any {abc def hij}] *
    } -result 0

    test column_search-any-pat-2.1 {
        Match on first element -inline 
    } -body {
        tarray::column search -inline -pat [newcolumn any {abc def hij}] *
    } -result abc

    test column_search-any-pat-2.2 {
        Match on last element 
    } -body {
        tarray::column search -pat [newcolumn any {abc def hij}] h*
    } -result 2

    test column_search-any-pat-2.3 {
        Match on last element 
    } -body {
        tarray::column search -pat -inline [newcolumn any {abc def hij}] *j
    } -result hij

    test column_search-any-pat-2.4 {
        Match -all (one element)
    } -body {
        tarray::column search -pat -all [newcolumn any {
            first {with spaces} { leading space} " AAA" 
        }] *A*
    } -result [crep int {3}] -match column

    test column_search-any-pat-2.5 {
        Match -all
    } -body {
        tarray::column search -pat -all [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] "* *"
    } -result [crep int {1 2}] -match column
    
    test column_search-any-pat-2.6 {
        Match -all -inline
    } -body {
        tarray::column search -pat -all -inline [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] *s*
    } -result [crep any {first { leading space} {with spaces}}] -match column

    test column_search-any-pat-3.0 {
        Match -not
    } -body {
        tarray::column search -not -pat [newcolumn any {aaa bbb ccc ddd eee}] a*
    } -result 1

    test column_search-any-pat-3.1 {
        Match on element -not -inline
    } -body {
        tarray::column search -not -pat -inline [newcolumn any {abc acb bca bac cab cba}] *c
    } -result acb

    test column_search-any-pat-3.2 {
        Match on element -not -all
    } -body {
        tarray::column search -not -pat -all [newcolumn any {abc acb bca bac cab cba}] *c
    } -result [crep int {1 2 4 5}] -match column

    test column_search-any-pat-3.3 {
        Match on element -not -all -inline
    } -body {
        tarray::column search -not -pat -all -inline [newcolumn any {abc acb bca bac cab cba}] *c
    } -result [crep any {acb bca cab cba}] -match column

    test column_search-any-pat-4.0 {
        Match on element -start
    } -body {
        tarray::column search -pat -start 2 [newcolumn any {abc acb bca bac cab cba}] *c
    } -result 3

    test column_search-any-pat-4.1 {
        Match fail -start
    } -body {
        tarray::column search -pat -start 1 [newcolumn any {zzz bbb ccc ddd}] a*
    } -result -1

    test column_search-any-pat-4.2 {
        Match -inline -start
    } -body {
        tarray::column search -pat -start 2 -inline [newcolumn any {abc acb bca bac cab cba}] *c
    } -result bac

    test column_search-any-pat-4.3 {
        Match -all -start
    } -body {
        tarray::column search -all -pat -start 2 [newcolumn any {abc acb bca bac cab cba dcb}] *c?
    } -result [crep int {2 6}] -match column

    test column_search-any-pat-4.4 {
        Match -all -inline -start
    } -body {
        tarray::column search -all -pat -start 2 -inline [newcolumn any {abc acb bca bac cab cba}] *c?
    } -result [crep any {bca}] -match column

    test column_search-any-pat-4.5 {
        Match -start -not
    } -body {
        tarray::column search -not -pat -start 2 [newcolumn any {abc acb bca bac cab cba}] *c?
    } -result 3

    test column_search-any-pat-4.6 {
        Match -inline -start -not -all
    } -body {
        tarray::column search -not -all -pat -start 2 -inline [newcolumn any {abc acb bca bac cab cba}] *c?
    } -result [crep any {bac cab cba}] -match column

    test column_search-any-pat-4.7 {
        Match -all -inline -start -1
    } -body {
        tarray::column search -all -pat -start -1 -inline [newcolumn any {abc acb bca bac cab cba}] *c?
    } -result [crep any {acb bca}] -match column

    test column_search-any-pat-4.8 {
        Match -all -inline -start out of bounds
    } -body {
        tarray::column search -pat -start 10 -inline -all [newcolumn any {aaa zzz bbb eee ccc}] c*
    } -result [crep any {}] -match column

    test column_search-any-pat-5.0 {
        Match missing element
    } -body {
        tarray::column search -pat [newcolumn any {aaa zzz bbb eee ccc}] s*
    } -result -1

    test column_search-any-pat-5.1 {
        Match missing element -inline
    } -body {
        tarray::column search -pat -inline [newcolumn any {aaa zzz bbb eee ccc}] x*
    } -result ""

    test column_search-any-pat-5.2 {
        Match missing element -all
    } -body {
        tarray::column search -pat -all [newcolumn any {aaa zzz bbb eee ccc}] *x
    } -result [crep int {}] -match column

    test column_search-any-pat-5.3 {
        Match missing element -not
    } -body {
        tarray::column search -pat -not [newcolumn any {abc aaa a12}] a*
    } -result -1

    test column_search-any-pat-5.4 {
        Match missing element -not -inline -all
    } -body {
        tarray::column search -pat -not -inline -all [newcolumn any {abc aaa a12}] a*
    } -result [crep any {}] -match column


    #
    # -re

    test column_search-any-re-1.0 {
        Search empty column
    } -body {
        tarray::column search -re [newcolumn any {}] .*
    } -result -1

    test column_search-any-re-1.1 {
        Search empty column
    } -body {
        tarray::column search -re -inline [newcolumn any {}] .*
    } -result {}

    test column_search-any-re-2.0 {
        Match on first element
    } -body {
        tarray::column search -re [newcolumn any {abc def hij}] {a..$}
    } -result 0

    test column_search-any-re-2.1 {
        Match on first element -inline 
    } -body {
        tarray::column search -inline -re [newcolumn any {abc def hij}] ^a
    } -result abc

    test column_search-any-re-2.2 {
        Match on last element 
    } -body {
        tarray::column search -re [newcolumn any {abc def hij}] h
    } -result 2

    test column_search-any-re-2.3 {
        Match on last element 
    } -body {
        tarray::column search -re -inline [newcolumn any {abc def hij}] j\$
    } -result hij

    test column_search-any-re-2.4 {
        Match -all (one element)
    } -body {
        tarray::column search -re -all [newcolumn any {
            a b c d e
        }] d
    } -result [crep int {3}] -match column

    test column_search-any-re-2.5 {
        Match -all
    } -body {
        tarray::column search -re -all [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] "space"
    } -result [crep int {1 2}] -match column
    
    test column_search-any-re-2.6 {
        Match -all -inline
    } -body {
        tarray::column search -re -all -inline [newcolumn any {
            first { leading space} {with spaces} AAA 5.0e5
        }] space
    } -result [crep any {{ leading space} {with spaces}}] -match column

    test column_search-any-re-3.0 {
        Match -not
    } -body {
        tarray::column search -not -re [newcolumn any {aaa bbb ccc ddd eee}] a
    } -result 1

    test column_search-any-re-3.1 {
        Match on element -not -inline
    } -body {
        tarray::column search -not -re -inline [newcolumn any {abc acb bca bac cab cba}] .c
    } -result cab

    test column_search-any-re-3.2 {
        Match on element -not -all
    } -body {
        tarray::column search -not -re -all [newcolumn any {abc acb bca bac cab cba}] c.
    } -result [crep int {0 3}] -match column

    test column_search-any-re-3.3 {
        Match on element -not -all -inline
    } -body {
        tarray::column search -not -re -all -inline [newcolumn any {abc acb bca bac cab cba}]  c..
    } -result [crep any {abc acb bca bac}] -match column

    test column_search-any-re-4.0 {
        Match on element -start
    } -body {
        tarray::column search -re -start 2 [newcolumn any {abc acb bca bac cab cba}] ..c
    } -result 3

    test column_search-any-re-4.1 {
        Match fail -start
    } -body {
        tarray::column search -re -start 1 [newcolumn any {zzz bbb ccc ddd}] a
    } -result -1

    test column_search-any-re-4.2 {
        Match -inline -start
    } -body {
        tarray::column search -re -start 2 -inline [newcolumn any {abc acb bca bac cab cba}] ..c
    } -result bac

    test column_search-any-re-4.3 {
        Match -all -start
    } -body {
        tarray::column search -all -re -start 2 [newcolumn any {abc acb bca bac cab cba dcb}] c.
    } -result [crep int {2 4 5 6}] -match column

    test column_search-any-re-4.4 {
        Match -all -inline -start
    } -body {
        tarray::column search -all -re -start 2 -inline [newcolumn any {abc acb bca bac cab cba}] ac
    } -result [crep any {bac}] -match column

    test column_search-any-re-4.5 {
        Match -start -not
    } -body {
        tarray::column search -not -re -start 2 [newcolumn any {abc acb bca bac cab cba}] b.*c
    } -result 4

    test column_search-any-re-4.6 {
        Match -inline -start -not -all
    } -body {
        tarray::column search -not -all -re -start 2 -inline [newcolumn any {abc acb bca bac cab cba}] b.
    } -result [crep any {cab}] -match column

    test column_search-any-re-4.7 {
        Match -all -inline -start -1
    } -body {
        tarray::column search -all -re -start -1 -inline [newcolumn any {abc acb bca bac cab cba}] c.
    } -result [crep any {acb bca cab cba}] -match column

    test column_search-any-re-4.8 {
        Match -all -inline -start out of bounds
    } -body {
        tarray::column search -re -start 10 -inline -all [newcolumn any {aaa zzz bbb eee ccc}] c
    } -result [crep any {}] -match column

    test column_search-any-re-5.0 {
        Match missing element
    } -body {
        tarray::column search -re [newcolumn any {aaa zzz bbb eee ccc}] s
    } -result -1

    test column_search-any-re-5.1 {
        Match missing element -inline
    } -body {
        tarray::column search -re -inline [newcolumn any {aaa zzz bbb eee ccc}] x
    } -result ""

    test column_search-any-re-5.2 {
        Match missing element -all
    } -body {
        tarray::column search -re -all [newcolumn any {aaa zzz bbb eee ccc}] x
    } -result [crep int {}] -match column

    test column_search-any-re-5.3 {
        Match missing element -not
    } -body {
        tarray::column search -re -not [newcolumn any {abc aaa a12}] a
    } -result -1

    test column_search-any-re-5.4 {
        Match missing element -not -inline -all
    } -body {
        tarray::column search -re -not -inline -all [newcolumn any {abc aaa a12}] a
    } -result [crep any {}] -match column




    # TBD - any
    # -re
    # -nocase


}

::tcltest::cleanupTests
