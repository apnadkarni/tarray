# column inject tests

source [file join [file dirname [info script]] testutil.tcl]

namespace eval tarray::test {

    foreach type {boolean string any byte double int uint wide } {

        test column_vinject-list-$type-1.0 {
            vinject single element list at start of empty column
        } -body {
            vcol_change_and_verify $type {} [samplerange $type 0 0] vinject [samplerange $type 0 0] 0
        } -result 0

        test column_vinject-list-$type-1.1 {
            vinject list at end of empty column
        } -body {
            set ta [newcolumn $type]
            tarray::column vinject ta [samplerange $type end end] end
            set ta
        } -result [crep $type [samplerange $type end end]] -match column

        test column_vinject-list-$type-1.2 {
            vinject list at start of empty column
        } -body {
            vcol_change_and_verify $type {} [samplerange $type 0 1] vinject [samplerange $type 0 1] 0
        } -result 0

        test column_vinject-list-$type-2.0 {
            vinject multiple element at start of column
        } -body {
            set ta [samplecolumn $type 0 128]
            tarray::column vinject ta [samplerange $type 129 end] 0
            set ta
        } -result [crep $type [linsert [samplerange $type 0 128] 0 {*}[samplerange $type 129 end]]] -match column

        test column_vinject-list-$type-2.1 {
            vinject multiple element at start of column
        } -body {
            set values [samplerange $type 0 31]
            set injections [samplerange $type 32 end]
            vcol_change_and_verify $type $values [linsert $values 0 {*}$injections] vinject $injections 0
        } -result 0

        test column_vinject-list-$type-2.2 {
            vinject elements after end element
        } -body {
            set values [samplerange $type 0 100]
            set injections [samplerange $type 150 end]
            vcol_change_and_verify $type $values [linsert $values end {*}$injections] vinject $injections end
        } -result 0

        test column_vinject-list-$type-2.3 {
            vinject multiple element at penultimate position
        } -body {
            set ta [newcolumn $type [largerange $type 0 128]]
            tarray::column vinject ta [largerange $type 129 end] 128
        } -result [crep $type [linsert [largerange $type 0 128] 128 {*}[largerange $type 129 end]]] -match column

        test column_vinject-list-$type-2.4 {
            vinject multiple elements in middle
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinject ta [samplerange $type 20 40] 64
            set ta
        } -result [crep $type [linsert [samplerange $type] 64 {*}[samplerange $type 20 40]]] -match column

        test column_vinject-list-$type-2.5 {
            vinject elements in middle of column
        } -body {
            set values [samplerange $type]
            set injections [samplerange $type 100 end]
            vcol_change_and_verify $type $values [linsert $values 63 {*}$injections] vinject $injections 63
        } -result 0

        test column_vinject-list-$type-2.6 {
            vinject multiple elements in middle extending column
        } -body {
            set ta [samplecolumn $type 0 255]
            tarray::column vinject ta [samplerange $type 20 40] 250
            set ta
        } -result [crep $type [linsert [samplerange $type 0 255] 250 {*}[samplerange $type 20 40]]] -match column

        test column_vinject-list-$type-2.7 {
            vinject elements in middle of column extending it
        } -body {
            set values [samplerange $type 0 16]
            set injections [samplerange $type 2 end]
            vcol_change_and_verify $type $values [linsert $values 14 {*}$injections] vinject $injections 14
        } -result 0

        test column_vinject-list-$type-2.8 {
            vinject elements after last element
        } -body {
            set values [samplerange $type 0 31]
            set injections [samplerange $type]
            vcol_change_and_verify $type $values [linsert $values end {*}$injections] vinject $injections 32
        } -result 0

        test column_vinject-list-$type-3.0 {
            vinject zero elements
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinject ta {} 10
        } -result [crep $type [samplerange $type]] -match column

        test column_vinject-list-$type-3.1 {
            vinject elements at negative index
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinject ta [samplerange $type 0 0] -1
        } -result "*index -1*out of bounds*" -match glob -returnCodes error

        test column_vinject-list-$type-3.2 {
            vinject elements at out of bounds index
        } -body {
            set ta [samplecolumn $type 0 10]
            tarray::column vinject ta [samplerange $type 0 end] 12
            set ta
        } -result "*index 12*out of bounds*" -match glob -returnCodes error

        test column_vinject-column-$type-1.0 {
            vinject single element column at start of empty column
        } -body {
            vcol_change_and_verify $type {} [samplerange $type 0 0] vinject [samplecolumn $type 0 0] 0
        } -result 0

        test column_vinject-column-$type-1.1 {
            vinject column at end of empty column
        } -body {
            set ta [newcolumn $type]
            tarray::column vinject ta [samplecolumn $type end end] end
        } -result [crep $type [samplerange $type end end]] -match column

        test column_vinject-column-$type-1.2 {
            vinject column at start of empty column
        } -body {
            vcol_change_and_verify $type {} [samplerange $type 0 1] vinject [samplecolumn $type 0 1] 0
        } -result 0

        test column_vinject-column-$type-2.0 {
            vinject multiple element column at start of column
        } -body {
            set ta [samplecolumn $type 0 128]
            tarray::column vinject ta [samplecolumn $type 129 end] 0
            set ta
        } -result [crep $type [linsert [samplerange $type 0 128] 0 {*}[samplerange $type 129 end]]] -match column

        test column_vinject-column-$type-2.1 {
            vinject multiple element column at start of column
        } -body {
            set values [samplerange $type 0 31]
            set injections [samplerange $type 32 end]
            vcol_change_and_verify $type $values [linsert $values 0 {*}$injections] vinject [newcolumn $type $injections] 0
        } -result 0

        test column_vinject-column-$type-2.2 {
            vinject column after end element
        } -body {
            set values [samplerange $type 0 100]
            set injections [samplerange $type 150 end]
            vcol_change_and_verify $type $values [linsert $values end {*}$injections] vinject [newcolumn $type $injections] end
        } -result 0

        test column_vinject-column-$type-2.3 {
            vinject multiple element column at penultimate position
        } -body {
            set ta [samplecolumn $type 0 128]
            tarray::column vinject ta [samplecolumn $type 129 end] 128
            set ta
        } -result [crep $type [linsert [samplerange $type 0 128] 128 {*}[samplerange $type 129 end]]] -match column

        test column_vinject-column-$type-2.4 {
            vinject column in middle
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinject ta [samplecolumn $type 20 40] 64
            set ta
        } -result [crep $type [linsert [samplerange $type] 64 {*}[samplerange $type 20 40]]] -match column

        test column_vinject-column-$type-2.5 {
            vinject column in middle of column
        } -body {
            set values [samplerange $type]
            set injections [samplerange $type 100 end]
            vcol_change_and_verify $type $values [linsert $values 63 {*}$injections] vinject [newcolumn $type $injections] 63
        } -result 0

        test column_vinject-column-$type-2.6 {
            vinject column in middle extending column
        } -body {
            set ta [samplecolumn $type 0 255]
            tarray::column vinject ta [samplecolumn $type 20 40] 250
            set ta
        } -result [crep $type [linsert [samplerange $type 0 255] 250 {*}[samplerange $type 20 40]]] -match column

        test column_vinject-column-$type-2.7 {
            vinject column in middle of column extending it
        } -body {
            set values [samplerange $type 0 16]
            set injections [samplerange $type 2 end]
            vcol_change_and_verify $type $values [linsert $values 14 {*}$injections] vinject [newcolumn $type $injections] 14
        } -result 0

        test column_vinject-column-$type-2.8 {
            vinject column after last element
        } -body {
            set values [samplerange $type 0 31]
            set injections [samplerange $type]
            vcol_change_and_verify $type $values [linsert $values end {*}$injections] vinject [newcolumn $type $injections] 32
        } -result 0

        test column_vinject-column-$type-3.0 {
            vinject zero elements
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinject ta [newcolumn $type] 10
        } -result [crep $type [samplerange $type]] -match column

        test column_vinject-column-$type-3.1 {
            vinject column at negative index
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinject ta [samplecolumn $type 0 0] -1
        } -result "*index -1*out of bounds*" -match glob -returnCodes error

        test column_vinject-column-$type-3.2 {
            vinject column at out of bounds index
        } -body {
            set ta [samplecolumn $type 0 10]
            tarray::column vinject ta [samplecolumn $type 0 end] 12
        } -result "*index 12*out of bounds*" -match glob -returnCodes error
    }

    foreach type {boolean byte int uint double string any} {
        test column_vinject-shimmer-$type-1.0 {
            Bug #20 - VALUES and FIRST refer to same object crashes
        } -setup {
            set c [newcolumn $type {0 1 2}]
        } -body {
            tarray::column vinject c 3 3 
            set c
        } -result [newcolumn $type {0 1 2 3}]
    }
    ::tcltest::cleanupTests
}
