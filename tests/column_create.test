# tarray column create

source testutil.tcl

namespace eval tarray::test {
    namespace import ::tcltest::test

    # Tests for creating empty and large tarrays
    foreach type {any string boolean byte double int uint wide} {
        test column-create-$type-1.0 {
            Test creation of empty column
        } -body {
            tarray::column create $type
        } -result [crep $type {}]
        test column-create-$type-1.1 {
            Test creation of empty column with preallocation
        } -body {
            tarray::column create $type {} 1000
        } -result [crep $type {}]

        #
        # Tests for creating large columns
        set num -1
        test column-create-large-$type-1.[incr num] {
            Test creation of column with large initializer
        } -body {
            tarray::column create $type [largelist $type]
        } -result [crep $type [largelist $type]] -match column
    }

    #
    # Tests for creating various lengths with valid values in standard format
    foreach {type values} [array get good] {
        set num -1
        foreach value $values {
            test column-create-$type-2.[incr num] {
                Test creation of column with initializer
            } -body {
                tarray::column create $type $value
            } -result [crep $type $value] -match column
        }
    }

    #
    # Tests for creating from other columns
    proc column_cast_expected_value {srctype dsttype} {
        if {$srctype eq "boolean"} {return [lrepeat 1000 1 0 1]}
        if {$srctype eq "double" && $dsttype in {any string}} {
            return [lrepeat 1000 1.0 0.0 3.0]
        }
        return [lrepeat 1000 1 0 3]
    }
            
    foreach type {any string boolean byte double int uint wide} {
        foreach type2 {any string boolean byte double int uint wide} {
            test column-create-$type2-to-$type-1.0 {
                Test creation from column
            } -setup {
                set srccol [tarray::column create $type2 [lrepeat 1000 1 0 3]]
            } -body {
                tarray::column create $type $srccol
            } -result [newcolumn $type [column_cast_expected_value $type2 $type]]
        }
    }

    #
    # Tests to ensure string reps are correct when converting int<->uint
    test column-create-int-to-uint-2.0 {
        Test string rep on int->uint conversion
    } -setup {
        set col [tarray::column create int {0 -1 1}]
        llength $col ;# Force string generation
    } -body {
        tarray::column create uint $col[set col {}] ;# Change ref count to 1
    } -result [newcolumn uint {0 4294967295 1}]
    
    test column-create-uint-to-int-2.0 {
        Test string rep on uint->int conversion
    } -setup {
        set col [tarray::column create uint {0 4294967295 1}]
        llength $col ;# Force string generation
    } -body {
        tarray::column create int $col[set col {}] ;# Change ref count to 1
    } -result [newcolumn int {0 -1 1}]
    
    

            
    #
    # Tests for invalid types
    # NOTE: tests for wide are expected to fail because Tcl_GetWideIntFromObj
    # does not fail on wideint overflow (3.3 and 3.4)
    foreach {type values} [array get bad] {
        set num -1
        foreach value $values {
            test column-create-$type-3.[incr num] {
                Test invalid values raise error in tarray creation
            } -body {
                tarray::column create $type [list $value]
            } -result * -match glob -returnCodes error
        }
    }


    # bitmap0/1 tests
    
    test column_bitmap0-1.0 {
        Create empty bitmap
    } -body {
        tarray::column bitmap0
    } -result {tarray_column boolean {}}

    test column_bitmap0-1.1 {
        Create empty bitmap
    } -body {
        tarray::column bitmap0 0
    } -result {tarray_column boolean {}}

    test column_bitmap0-1.2 {
        Create bitmap size 1
    } -body {
        tarray::column bitmap0 1
    } -result {tarray_column boolean {0}}
    
    test column_bitmap0-1.3 {
        Create bitmap
    } -body {
        tarray::column bitmap0 9
    } -result {tarray_column boolean {0 0 0 0 0 0 0 0 0}}

    test column_bitmap0-1.4 {
        Create bitmap error
    } -body {
        tarray::column bitmap0 foo
    } -result {expected integer but got "foo"} -returnCodes error

    test column_bitmap0-2.0 {
        Create bitmap with init list
    } -body {
        tarray::column bitmap0 9 {0 8}
    } -result {tarray_column boolean {1 0 0 0 0 0 0 0 1}}

    test column_bitmap0-2.0.1 {
        Create bitmap with init list that grows column
    } -body {
        tarray::column bitmap0 8 {0 9 8}
    } -result {tarray_column boolean {1 0 0 0 0 0 0 0 1 1}}

    test column_bitmap0-2.0.2 {
        Create bitmap with init list with error on growing column
    } -body {
        tarray::column bitmap0 8 {0 9}
    } -result "tarray index 9 out of bounds." -returnCodes error
    
    test column_bitmap0-2.1 {
        Create bitmap with init index column
    } -body {
        tarray::column bitmap0 8 [tarray::column create int {3 4}]
    } -result {tarray_column boolean {0 0 0 1 1 0 0 0}}

    test column_bitmap0-2.1.1 {
        Create bitmap with init index column that grows column
    } -body {
        tarray::column bitmap0 8 [tarray::column create int {9 10 8}]
    } -result {tarray_column boolean {0 0 0 0 0 0 0 0 1 1 1}}

    test column_bitmap0-2.1.2 {
        Create bitmap with init index column error growing column
    } -body {
        tarray::column bitmap0 8 [tarray::column create int {10 8}]
    } -result "tarray index 10 out of bounds." -returnCodes error

    test column_bitmap0-2.2 {
        Create bitmap with init boolean column
    } -body {
        tarray::column bitmap0 5 [tarray::column bitmap0 4 {1 3}]
    } -result {tarray_column boolean {0 1 0 1 0}}

    test column_bitmap0-2.2.1 {
        Create bitmap with init boolean column that grows
    } -body {
        tarray::column bitmap0 5 [tarray::column bitmap0 32 {6 4 3}]
    } -result "tarray index 6 out of bounds." -returnCodes error

    test column_bitmap0-2.2.2 {
        Create bitmap with init boolean column error growing
    } -body {
        tarray::column bitmap0 4 [tarray::column bitmap0 7 {6 4 3}]
    } -result "tarray index 6 out of bounds." -returnCodes error


    test column_bitmap1-1.0 {
        Create empty bitmap
    } -body {
        tarray::column bitmap1
    } -result {tarray_column boolean {}}

    test column_bitmap1-1.1 {
        Create empty bitmap
    } -body {
        tarray::column bitmap1 0
    } -result {tarray_column boolean {}}

    test column_bitmap1-1.2 {
        Create bitmap size 1
    } -body {
        tarray::column bitmap1 1
    } -result {tarray_column boolean {1}}
    
    test column_bitmap1-1.3 {
        Create bitmap
    } -body {
        tarray::column bitmap1 9
    } -result {tarray_column boolean {1 1 1 1 1 1 1 1 1}}

    test column_bitmap1-1.4 {
        Create bitmap error
    } -body {
        tarray::column bitmap1 foo
    } -result {expected integer but got "foo"} -returnCodes error

    test column_bitmap1-2.0 {
        Create bitmap with init list
    } -body {
        tarray::column bitmap1 9 {1 2 3 4 5 6 7}
    } -result {tarray_column boolean {1 0 0 0 0 0 0 0 1}}

    test column_bitmap1-2.0.1 {
        Create bitmap with init list that grows column
    } -body {
        tarray::column bitmap1 8 {0 9 8}
    } -result {tarray_column boolean {0 1 1 1 1 1 1 1 0 0}}

    test column_bitmap1-2.0.2 {
        Create bitmap with init list with error on growing column
    } -body {
        tarray::column bitmap1 8 {0 9}
    } -result "tarray index 9 out of bounds." -returnCodes error
    
    test column_bitmap1-2.1 {
        Create bitmap with init index column
    } -body {
        tarray::column bitmap1 8 [tarray::column create int {3 4}]
    } -result {tarray_column boolean {1 1 1 0 0 1 1 1}}

    test column_bitmap1-2.1.1 {
        Create bitmap with init index column that grows column
    } -body {
        tarray::column bitmap1 8 [tarray::column create int {9 10 8}]
    } -result {tarray_column boolean {1 1 1 1 1 1 1 1 0 0 0}}

    test column_bitmap1-2.1.2 {
        Create bitmap with init index column error growing column
    } -body {
        tarray::column bitmap1 8 [tarray::column create int {10 8}]
    } -result "tarray index 10 out of bounds." -returnCodes error

    test column_bitmap1-2.2 {
        Create bitmap with init boolean column
    } -body {
        tarray::column bitmap1 5 [tarray::column bitmap0 4 {1 3}]
    } -result {tarray_column boolean {1 0 1 0 1}}

    test column_bitmap1-2.2.1 {
        Create bitmap with init boolean column that grows
    } -body {
        tarray::column bitmap1 5 [tarray::column bitmap0 32 {6 4 3}]
    } -result "tarray index 6 out of bounds." -returnCodes error

    test column_bitmap1-2.2.2 {
        Create bitmap with init boolean column error growing
    } -body {
        tarray::column bitmap1 4 [tarray::column bitmap0 7 {6 4 3}]
    } -result "tarray index 6 out of bounds." -returnCodes error


}
::tcltest::cleanupTests
