# column insert tests

source testutil.tcl

namespace eval tarray::test {

    foreach type {boolean string any byte double int uint wide } {

        test column_vinsert-value-$type-1.0 {
            Insert one element at start of empty column
        } -body {
            vcol_change_and_verify $type {} [samplerange $type 0 0] vinsert [samplevalue $type] 0 1
        } -result 0

        test column_vinsert-value-$type-1.1 {
           vinsert one element at end of empty column
        } -body {
            set ta [newcolumn $type]
            tarray::column vinsert ta [samplevalue $type] end 1
            set ta
        } -result [crep $type [samplerange $type 0 0]] -match column

        test column_vinsert-value-$type-2.0 {
            vinsert one element at start of empty column
        } -body {
            set values [samplerange $type 0 100]
            set val [samplevalue $type end]
            vcol_change_and_verify $type $values [linsert $values 0 $val] vinsert $val 0 1
        } -result 0

        test column_vinsert-value-$type-2.1 {
            vinsert multiple element at start of column
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinsert ta [samplevalue $type end] 0 10
            set ta
        } -result [crep $type [linsert [samplerange $type] 0 {*}[listrepeat 10 [samplevalue $type end]]]] -match column

        test column_vinsert-value-$type-2.2 {
            vinsert multiple element at start of column
        } -body {
            set ta [largecolumn $type]
            tarray::column vinsert ta [lindex [largelist $type] 0] end 10
        } -result [crep $type [linsert [largerange $type] end {*}[listrepeat 10 [lindex [largelist $type] 0]]]] -match column

        test column_vinsert-value-$type-2.3 {
            vinsert elements at end of column
        } -body {
            set values [samplerange $type 0 100]
            set val [samplevalue $type 0]
            vcol_change_and_verify $type $values [linsert $values end {*}[listrepeat 27 $val]] vinsert $val end 27
        } -result 0

        test column_vinsert-value-$type-2.4 {
            vinsert multiple element in middle
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinsert ta [samplevalue $type 0] 64 7
            set ta
        } -result [crep $type [linsert [samplerange $type] 64 {*}[listrepeat 7 [samplevalue $type 0]]]] -match column

        test column_vinsert-value-$type-2.5 {
            vinsert elements in middle of column
        } -body {
            set values [largelist $type]
            set val [lindex $values end]
            vcol_change_and_verify $type $values [linsert $values 63 {*}[listrepeat  8 $val]] vinsert $val 63 8
        } -result 0

        test column_vinsert-value-$type-2.6 {
            vinsert multiple element in middle extending column
        } -body {
            set ta [samplecolumn $type 0 49]
            tarray::column vinsert ta [samplevalue $type end] 48 4
            set ta
        } -result [crep $type [linsert [samplerange $type 0 49] 48 {*}[listrepeat 4 [samplevalue $type end]]]] -match column

        test column_vinsert-value-$type-2.7 {
            vinsert elements in middle of column extending it
        } -body {
            set values [samplerange $type 0 31]
            set val [samplevalue $type end]
            vcol_change_and_verify $type $values [linsert $values 30 {*}[listrepeat  8 $val]] vinsert $val 30 8
        } -result 0

        test column_vinsert-value-$type-2.8 {
            vinsert elements after last element
        } -body {
            set values [samplerange $type 0 31]
            set val [samplevalue $type end]
            vcol_change_and_verify $type $values [linsert $values end {*}[listrepeat  8 $val]] vinsert $val 32 8
        } -result 0

        test column_vinsert-value-$type-3.0 {
            vinsert zero elements
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinsert ta [samplevalue $type end] 10 0
        } -result [crep $type [samplerange $type]] -match column

        test column_vinsert-value-$type-3.1 {
            vinsert negative number of elements
        } -body {
            set values [samplerange $type 0 31]
            set val [samplevalue $type end]
            vcol_change_and_verify $type $values $values vinsert $val 30 0
        } -result 0

        test column_vinsert-value-$type-3.2 {
            vinsert elements at negative index
        } -body {
            set ta [samplecolumn $type]
            tarray::column vinsert ta [samplevalue $type end] -1 1
        } -result "*index -1*out of bounds*" -match glob -returnCodes error

        test column_vinsert-value-$type-3.3 {
            vinsert elements at out of bounds index
        } -body {
            set ta [samplecolumn $type 0 10]
            tarray::column vinsert ta [samplevalue $type end] 12 1
            set ta
        } -result "*index 12*out of bounds*" -match glob -returnCodes error

    }
    ::tcltest::cleanupTests
}
