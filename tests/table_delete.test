# table delete tests

source testutil.tcl

namespace eval tarray::test {

    # Note two general types of tests - via a temp variable and directly
    # from the create return value. The difference is that in the
    # former case the value ref count is > 1, and the object needs to
    # be dup'ed while in the latter the ref count is 1 and the called
    # command can directly use it.
    # Also, when modifying a temp variable tests have to confirm that
    # the original is not modified

    #
    # table delete index
    test table_delete-index-1.0 {
        Test deletion of first element (shared tclobj)
    } -body {
        set types {int any byte}
        tab_change_and_verify $types [samplerows $types 0 9] [samplerows $types 1 9] delete 0
    } -result 0

    test table_delete-index-1.1 {
        Test deletion of first element (unshared tclobj)
    } -body {
        set types {boolean wide double uint}
        tab_change_and_verify_u $types [samplerows $types 0 32] [samplerows $types 1 32] delete 0
    } -result 0

    test table_delete-index-2.0 {
        Test deletion of last element (shared tclobj)
    } -body {
        set types {uint int any}
        tab_change_and_verify $types [samplerows $types 0 9] [samplerows $types 0 8] delete end
    } -result 0

    test table_delete-index-2.1 {
        Test deletion of last element (unshared tclobj)
    } -body {
        set types {int any}
        tab_change_and_verify_u $types [samplerows $types 0 9] [samplerows $types 0 8] delete end
    } -result 0

    set n -1
    foreach i {1 7 8 9 31 32 33 63 64 65 254} {
        test table_delete-index-3.[incr n] {
            Test deletion of intermediate element (shared tclobj)
        } -body {
            set types {any boolean byte double int uint wide}
            tab_change_and_verify $types \
                [samplerows $types 0 255] \
                [samplerows $types 0 [expr {$i-1}] [expr {$i+1}] 255] \
                delete $i
        } -result 0

        test table_delete-index-3.[incr n] {
            Test deletion of intermediate element (unshared tclobj)
        } -body {
            set types {any boolean byte double int uint wide}
            tab_change_and_verify_u $types \
                [samplerows $types 0 256] \
                [samplerows $types 0 [expr {$i-1}] [expr {$i+1}] 256] \
                delete $i
        } -result 0
    }

    test table_delete-index-5.0 {
        Test deletion of out-of-range index
    } -body {
        set types {int byte boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 99] delete 100
    } -result 0

    test table_delete-index-5.1 {
        Test deletion of out-of-range index
    } -body {
        set types {boolean boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 99] delete 101
    } -result 0

    test table_delete-index-5.2 {
        Test deletion of out-of-range index
    } -body {
        set types {any any}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 99] delete -1
    } -result 0

    test table_delete-index-5.3 {
        Test deletion of invalid syntax index
    } -body {
        set types {int any}
        tab_change_and_verify $types [samplerows $types 0 9] [samplerows $types 0 9] delete badindex
    } -returnCodes error -match glob -result "*expected integer*badindex*"

    test table_delete-index-6.0 {
        Test deletion of element from single element grid
    } -body {
        set types {int any}
        tab_change_and_verify $types [samplerows $types 0 0] [samplerows $types 0 -1] delete 0
    } -result 0

    test table_delete-index-6.1 {
        Test deletion of element from single element grid (unshared)
    } -body {
        set types {boolean int any}
        tab_change_and_verify_u $types [samplerows $types 0 0] [samplerows $types 0 -1] delete 0
    } -result 0

    test table_delete-index-7.0 {
        Test attempt to delete element from empty table (shared)
    } -body {
        set types {int uint}
        tab_change_and_verify $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete 0
    } -result 0

    test table_delete-index-7.1 {
        Test attempt to delete element from empty table (unshared)
    } -body {
        set types {any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete 0
    } -result 0

    test table_delete-index-7.2 {
        Test attempt to delete invalid index from empty table (unshared)
    } -body {
        set types {any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete -1
    } -result 0
    

    #
    # table delete index list

    test table_delete-indexlist-1.0 {
        Test deletion of leading elements (shared tclobj)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 3 99] delete [list 0 1 2]
    } -result 0 

    test table_delete-indexlist-1.1 {
        Test deletion of leading elements (unshared tclobj)
    } -body {
        set types {wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 257] [samplerows $types 4 257] delete [list 0 1 3 2 3]
    } -result 0

    test table_delete-indexlist-1.2 {
        Test deletion of leading elements (shared tclobj, out of order)
    } -body {
        set types {wide byte boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 4 99] delete [list 1 0 3 1 2]
    } -result 0

    test table_delete-indexlist-1.3 {
        Test deletion of leading elements (unshared tclobj, reverse order)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 5 99] delete [list 4 3 3 2 1 0]
    } -result 0

    test table_delete-indexlist-2.0 {
        Test deletion of trailing elements (shared tclobj)
    } -body {
        set types {wide byte}
        tab_change_and_verify $types [samplerows $types 0 258] [samplerows $types 0 255] delete [list 256 257 258]
    } -result 0

    test table_delete-indexlist-2.1 {
        Test deletion of trailing elements (unshared tclobj)
    } -body {
        set types {boolean byte wide}
        tab_change_and_verify_u $types [samplerows $types 0 258] [samplerows $types 0 256] delete [list 257 257 258 258]
    } -result 0

    test table_delete-indexlist-2.2 {
        Test deletion of trailing elements (shared tclobj, out of order)
    } -body {
        set types {wide byte}
        tab_change_and_verify $types [samplerows $types 0 255] [samplerows $types 0 251] delete [list 255 252 254 253 255 252]
    } -result 0

    test table_delete-indexlist-2.3 {
        Test deletion of trailing elements (unshared tclobj, reverse order)
    } -body {
        set types {wide any double}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 95] delete [list 100 99 98 97 96]
    } -result 0

    test table_delete-indexlist-3.0 {
        Test deletion of intermediate (shared tclobj, ordered)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types \
            [samplerows $types 0 255] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 253 255 255] \
            delete {1 7 8 9 31 32 33 63 64 65 254}
    } -result 0

    test table_delete-indexlist-3.1 {
        Test deletion of intermediate (unshared tclobj, reverse order)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify_u $types \
            [samplerows $types 0 255] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 254] \
            delete [lsort -decreasing -integer {1 7 8 9 31 32 33 63 64 65 255}]
    } -result 0

    test table_delete-indexlist-3.2 {
        Test deletion of intermediate (shared tclobj, random order)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types \
            [samplerows $types 0 255] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 253 255 255] \
            delete {1 254 64 33 7 65 8 33 9 31 32 63 254 1 65}
    } -result 0

    test table_delete-indexlist-4.0 {
        Test deletion of out-of-range (unshared, increasing indices)
    } -body {
        set types {boolean byte wide}
        tab_change_and_verify_u $types [samplerows $types 0 255] [samplerows $types 0 253] delete [list 254 255 256 257 258]
    } -result 0

    test table_delete-indexlist-4.1 {
        Test deletion of out-of-range (shared, reverse indices)
    } -body {
        set types {boolean byte wide}
        tab_change_and_verify $types [samplerows $types 0 98] [samplerows $types 0 96] delete [list 100 99 98 97]
    } -result 0

    test table_delete-indexlist-4.2 {
        Test deletion of out-of-range (shared, random indices)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types \
            [samplerows $types 0 100] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 100] \
            delete {1 254 64 33 7 65 8 33 9 31 32 63 254 1 65}
    } -result 0

    test table_delete-indexlist-5.0 {
        Test deletion of invalid syntax indices
    } -body {
        set types {int any}
        tab_change_and_verify $types [samplerows $types 0 9] [samplerows $types 1 9] delete {1 notinteger 63}
    } -returnCodes error -match glob -result "expected integer but got \"notinteger\""

    test table_delete-indexlist-5.1 {
        Test deletion of invalid syntax indices
    } -body {
        set types {int any}
        tab_change_and_verify $types [samplerows $types 0 9] [samplerows $types 1 9] delete {1 end 63}
    } -returnCodes error -match glob -result "expected integer but got \"end\""

    test table_delete-indexlist-6.0 {
        Test deletion of all indices from table (shared)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [list 0 1 2 3 4 5 6 7 8 9 10]
    } -result 0

    test table_delete-indexlist-6.0 {
        Test deletion of all indices from table (unshared, reverse)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [list 10 9 8 7 6 5 4 3 2 1 0]
    } -result 0

    test table_delete-indexlist-6.3 {
        Test deletion of all indices from table (unshared, random order)
    } -body {
        set types {int wide uint}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [list 9 8 10 3 6 4 7 5 2 1 0]
    } -result 0

    test table_delete-indexlist-6.4 {
        Test deletion of all indices from table (shared, random order, dups)
    } -body {
        set types {uint boolean any}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [list 9 8 9 10 3 6 4 0 7 5 2 1 1 0 10]
    } -result 0

    test table_delete-indexlist-7.0 {
        Test attempt to delete element from empty column (shared)
    } -body {
        set types {int uint}
        tab_change_and_verify $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete {0 1 2}
    } -result 0

    test table_delete-indexlist-7.1 {
        Test attempt to delete element from empty column (unshared)
    } -body {
        tab_change_and_verify_u $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete {0 2 1}
    } -result 0

    #
    # column delete indicesarray

    test table_delete-indices-1.0 {
        Test deletion of leading elements (shared tclobj)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 3 99] delete [indexcolumn 0 1 2]
    } -result 0 

    test table_delete-indices-1.1 {
        Test deletion of leading elements (unshared tclobj)
    } -body {
        set types {wide double byte uint}
        tab_change_and_verify_u $types [samplerows $types 0 257] [samplerows $types 4 257] delete [indexcolumn 0 1 3 2 3]
    } -result 0

    test table_delete-indices-1.2 {
        Test deletion of leading elements (shared tclobj, out of order)
    } -body {
        set types {wide byte boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 4 99] delete [indexcolumn 1 0 3 1 2]
    } -result 0

    test table_delete-indices-1.3 {
        Test deletion of leading elements (unshared tclobj, reverse order)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 5 99] delete [indexcolumn 4 3 3 2 1 0]
    } -result 0

    test table_delete-indices-2.0 {
        Test deletion of trailing elements (shared tclobj)
    } -body {
        set types {wide byte}
        tab_change_and_verify $types [samplerows $types 0 258] [samplerows $types 0 255] delete [indexcolumn 256 257 258]
    } -result 0

    test table_delete-indices-2.1 {
        Test deletion of trailing elements (unshared tclobj)
    } -body {
        set types {boolean byte wide}
        tab_change_and_verify_u $types [samplerows $types 0 258] [samplerows $types 0 256] delete [indexcolumn 257 257 258 258]
    } -result 0

    test table_delete-indices-2.2 {
        Test deletion of trailing elements (shared tclobj, out of order)
    } -body {
        set types {wide byte}
        tab_change_and_verify $types [samplerows $types 0 255] [samplerows $types 0 251] delete [indexcolumn 255 252 254 253 255 252]
    } -result 0

    test table_delete-indices-2.3 {
        Test deletion of trailing elements (unshared tclobj, reverse order)
    } -body {
        set types {wide any double}
        tab_change_and_verify_u $types [samplerows $types 0 100] [samplerows $types 0 95] delete [indexcolumn 100 99 98 97 96]
    } -result 0

    test table_delete-indices-3.0 {
        Test deletion of intermediate (shared tclobj, ordered)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types \
            [samplerows $types 0 255] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 253 255 255] \
            delete [indexcolumn 1 7 8 9 31 32 33 63 64 65 254]
    } -result 0

    test table_delete-indices-3.1 {
        Test deletion of intermediate (unshared tclobj, reverse order)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify_u $types \
            [samplerows $types 0 255] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 254] \
            delete [tarray::column sort -decreasing [indexcolumn 1 7 8 9 31 32 33 63 64 65 255]]
    } -result 0

    test table_delete-indices-3.2 {
        Test deletion of intermediate (shared tclobj, random order)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types \
            [samplerows $types 0 255] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 253 255 255] \
            delete [indexcolumn 1 254 64 33 7 65 8 33 9 31 32 63 254 1 65]
    } -result 0

    test table_delete-indices-4.0 {
        Test deletion of out-of-range (unshared, increasing indices)
    } -body {
        set types {boolean byte wide}
        tab_change_and_verify_u $types [samplerows $types 0 255] [samplerows $types 0 253] delete [indexcolumn 254 255 256 257 258]
    } -result 0

    test table_delete-indices-4.1 {
        Test deletion of out-of-range (shared, reverse indices)
    } -body {
        set types {boolean byte wide}
        tab_change_and_verify $types [samplerows $types 0 98] [samplerows $types 0 96] delete [indexcolumn 100 99 98 97]
    } -result 0

    test table_delete-indices-4.2 {
        Test deletion of out-of-range (shared, random indices)
    } -body {
        set types {any boolean byte double int uint wide}
        tab_change_and_verify $types \
            [samplerows $types 0 100] \
            [samplerows $types 0 0 2 6 10 30 34 62 66 100] \
            delete [indexcolumn 1 254 64 33 7 65 8 33 9 31 32 63 254 1 65]
    } -result 0

    test table_delete-indices-6.0 {
        Test deletion of all indices from table (shared)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [indexcolumn 0 1 2 3 4 5 6 7 8 9 10]
    } -result 0

    test table_delete-indices-6.0 {
        Test deletion of all indices from table (unshared, reverse)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [indexcolumn 10 9 8 7 6 5 4 3 2 1 0]
    } -result 0

    test table_delete-indices-6.3 {
        Test deletion of all indices from table (unshared, random order)
    } -body {
        set types {int wide uint}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [indexcolumn 9 8 10 3 6 4 7 5 2 1 0]
    } -result 0

    test table_delete-indices-6.4 {
        Test deletion of all indices from table (shared, random order, dups)
    } -body {
        set types {uint boolean any}
        tab_change_and_verify_u $types [samplerows $types 0 10] [samplerows $types 0 -1] delete [indexcolumn 9 8 9 10 3 6 4 0 7 5 2 1 1 0 10]
    } -result 0

    test table_delete-indices-7.0 {
        Test attempt to delete element from empty column (shared)
    } -body {
        set types {int uint}
        tab_change_and_verify $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete [indexcolumn 0 1 2]
    } -result 0

    test table_delete-indices-7.1 {
        Test attempt to delete element from empty column (unshared)
    } -body {
        set types {int boolean wide}
        tab_change_and_verify_u $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete [indexcolumn 0 2 1]
    } -result 0


    #
    # table delete range
    test table_delete-range-1.0 {
        Test deletion of leading elements (shared tclobj)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 3 99] delete 0 2
    } -result 0

    test table_delete-range-1.1 {
        Test deletion of leading elements (unshared tclobj)
    } -body {
        set types {wide any double}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 99 99] delete 0 98
    } -result 0

    test table_delete-range-2.0 {
        Test deletion of trailing elements (shared tclobj)
    } -body {
        set types {boolean any uint}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 90] delete 91 99
    } -result 0

    test table_delete-range-2.1 {
        Test deletion of trailing elements (unshared tclobj, using end)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 0 49] delete 50 end
    } -result 0

    test table_delete-range-3.0 {
        Test deletion of intermediate (shared tclobj)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 59 81 99] delete 60 80
    } -result 0

    test table_delete-range-3.1 {
        Test deletion of intermediate (unshared tclobj)
    } -body {
        set types {any boolean wide}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 0 0 99 99] delete 1 98
    } -result 0

    test table_delete-range-4.0 {
        Test deletion of out-of-range (unshared)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 99] delete 100 110
    } -result 0

    test table_delete-range-4.1 {
        Test deletion of out-of-range (unshared, negative)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 0 99] delete 100 110
    } -result 0

    test table_delete-range-4.2 {
        Test deletion of out-of-range (unshared, partial)
    } -body {
        set types {double any boolean uint}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 0 89] delete 90 110
    } -result 0

    test table_delete-range-4.3 {
        Test deletion of out-of-range (shared, partial)
    } -body {
        set types {double any boolean uint}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 6 99] delete -5 5
    } -result 0

    test table_delete-range-4.4 {
        Test deletion of reversed range limits
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 99] delete 60 40
    } -result 0

    test table_delete-range-5.0 {
        Test deletion of invalid syntax start index
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 3 99] delete foo 10
    } -returnCodes error -match glob -result "Invalid index 'foo'. Must be an integer or the keyword 'end'."

    test table_delete-range-5.1 {
        Test deletion of invalid syntax end index
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 3 99] delete 0 foo
    } -returnCodes error -match glob -result "Invalid index 'foo'. Must be an integer or the keyword 'end'."

    test table_delete-range-6.0 {
        Test deletion of all indices from column (shared)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 0 -1] delete 0 99
    } -result 0

    test table_delete-range-7.0 {
        Test attempt to delete element from empty column (shared)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete 0 end
    } -result 0

    test table_delete-range-7.1 {
        Test attempt to delete element from empty column (unshared)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 -1] [samplerows $types 0 -1] delete 0 0
    } -result 0

    test table_delete-range-8.0 {
        Delete single element range (shared, leading)
    } -body {
        set types {int any boolean}
        tab_change_and_verify $types [samplerows $types 0 99] [samplerows $types 1 99] delete 0 0 
    } -result 0

    test table_delete-range-8.1 {
        Delete single element range (unshared, trailing)
    } -body {
        set types {int any boolean}
        tab_change_and_verify_u $types [samplerows $types 0 99] [samplerows $types 0 98] delete end end
    } -result 0

}

::tcltest::cleanupTests

