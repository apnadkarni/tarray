PEG TASelector (Selector)
   Selector <- AndTerm (WS OrOp WS AndTerm)*;
   AndTerm  <- BoolTerm (WS AndOp WS BoolTerm)*;
   BoolTerm <- BaseTerm (WS RelOp WS BaseTerm)?;
   BaseTerm <- NotOp? (RealNumber / '(' WS Selector WS ')' / Var / StringLiteral);

leaf: RealNumber <- Sign? <ddigit> + ('.' <ddigit> + )? ( ('e' / 'E' ) ('+' / '-') ? <ddigit> + )?;
leaf: Var   <- ('_' / '::' / <alpha>) ('_' / '::' / <alnum>)* ;
leaf: Sign  <- [-+];
leaf: NotOp <- '!';
leaf: RelOp <- '==' / '!=' / '<=' / '>='
         / '<' / '>' / '=^' / '!^' / '=~' / '!~' / '=^~'
	 / '!^~' / '=*' / '!*' / '=^*' / '!^*';
leaf: AndOp <- '&&';
leaf: OrOp  <- '||';
void: WS    <- (('\\' EOL) / (!EOL <space>))*;
void: WSob  <- (('\\' EOL) / (!EOL <space>))+;

StringLiteral <- Quote (!Quote Char)* Quote;
void: Char   <- BackSlash ( Quote 
                     / BackSlash
                     / [bfnrt]
                     / 'x' <xdigit> <xdigit> <xdigit>
                     / 'u' <xdigit> <xdigit> <xdigit> <xdigit>
                     / 'U' <xdigit> <xdigit> <xdigit> <xdigit> <xdigit> <xdigit> <xdigit> <xdigit>
                    )
           / . ;
void: Quote <- '"';
void: Backslash <- '\\';
END;
